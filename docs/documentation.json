{
  "overview": "# Project Overview for seoagent-nextjs\n\n## What This Application Does\nWelcome to **seoagent-nextjs**, a powerful tool designed to help users optimize their online presence and improve their search engine rankings. Whether you’re a small business owner, a digital marketer, or a content creator, this application simplifies the complex world of SEO (Search Engine Optimization). With seoagent-nextjs, you can easily analyze your website’s performance, identify areas for improvement, and implement effective strategies to attract more visitors. What sets this application apart is its user-friendly interface and robust features that cater to both beginners and seasoned professionals alike.\n\n## How It Works (Simple Explanation)\nUsing seoagent-nextjs is as easy as pie! When you log in, you’re greeted with a clean and intuitive dashboard that guides you through the process of optimizing your website. You can enter your website URL, and the application will analyze various aspects such as keyword usage, page speed, and mobile-friendliness. The information flows seamlessly through the system, providing you with actionable insights and recommendations. You can then track your progress over time, making adjustments as needed to enhance your site’s visibility on search engines. The user experience is designed to be straightforward, ensuring that anyone can navigate the application with ease.\n\n## Key Features & Capabilities\n- **SEO Analysis**: Get detailed reports on your website’s SEO performance, including keyword rankings and site structure.\n- **Actionable Recommendations**: Receive tailored suggestions to improve your website’s SEO, helping you implement best practices effectively.\n- **User-Friendly Dashboard**: Navigate through a clean and organized interface that makes it easy to access all features.\n- **Performance Tracking**: Monitor your website’s progress over time with insightful analytics and reports.\n- **Content Optimization Tools**: Utilize tools that help you create SEO-friendly content, ensuring your articles and pages are optimized for search engines.\n\n## Technology Overview (Friendly)\nThe backbone of seoagent-nextjs is built on modern web technologies like **React** and **Next.js**, which provide a fast and responsive user experience. **Express** powers the backend, ensuring smooth communication between the server and the application. We chose these technologies because they allow for quick loading times and a seamless experience, which is crucial for keeping users engaged. The combination of these frameworks ensures that different parts of the application work harmoniously together, delivering a reliable and efficient tool for anyone looking to enhance their online presence. \n\nIn summary, seoagent-nextjs is not just an application; it’s your partner in navigating the world of SEO, making it easier for you to connect with your audience and grow your online footprint.",
  "frontend": {
    "overview": "# Frontend Architecture Overview\n\nThis React application consists of **23 pages** with **418 components** (85 interactive).\n\n## Pages Structure\n\n- **[Upgrade Badge](#upgrade-badge)** (`/unknown`) - 1 components\n- **[Protected Route](#protected-route)** (`/unknown`) - 2 components\n- **[Feature Gate](#feature-gate)** (`/unknown`) - 4 components\n- **[App](#app)** (`/`) - 5 components\n- **[Layout](#layout)** (`/layout.tsx`) - 5 components\n- **[Terms](#terms)** (`/terms`) - 6 components\n- **[Strategy](#strategy)** (`/strategy`) - 14 components\n- **[Privacy](#privacy)** (`/privacy`) - 6 components\n- **[Login](#login)** (`/login`) - 13 components\n- **[Keywords](#keywords)** (`/keywords`) - 7 components\n- **[Debug Seo](#debug-seo)** (`/debug-seo`) - 17 components\n- **[Dashboard](#dashboard)** (`/dashboard`) - 2 components\n- **[Content Writer](#content-writer)** (`/content-writer`) - 57 components\n- **[Cms Connections](#cms-connections)** (`/cms-connections`) - 19 components\n- **[Chat](#chat)** (`/chat`) - 2 components\n- **[Autopilot](#autopilot)** (`/autopilot`) - 11 components\n- **[Article Writer](#article-writer)** (`/article-writer`) - 57 components\n- **[Add Website](#add-website)** (`/add-website`) - 29 components\n- **[Account](#account)** (`/account`) - 15 components\n- **[[website Id]](#website-id)** (`/website/[websiteId]`) - 40 components\n- **[[token]](#token)** (`/meta-tags/[token]`) - 39 components\n- **[[token]](#token)** (`/alt-tags/[token]`) - 40 components\n- **[Cms Connection](#cms-connection)** (`/website/[websiteId]/cms-connection`) - 27 components\n\n## Component Distribution\n\n- **Other Components**: 331\n- **Buttons & Actions**: 45\n- **Input Fields**: 21\n- **Navigation Links**: 14\n- **Forms & Input**: 5\n- **Navigation Components**: 2\n\n## Navigation Flow\n\nThe application uses a combination of:\n- **Direct links** for page-to-page navigation\n- **Button clicks** for actions and form submissions\n- **Programmatic navigation** using React Router or Next.js routing\n\nClick on any page below to see its components and navigation details.",
    "featuresAndFunctionality": "# Frontend Features & Functionality\n\nThis React application provides a comprehensive user interface with 23 distinct pages and interactive components.\n\n## Pages Overview\n\n### Upgrade Badge\n**Route**: `/unknown`\n\nThe Upgrade Badge page provides user interface and functionality for upgrade badge related features.\n\n**Interactive Components**: 1\n- ⚡\n\n### Protected Route\n**Route**: `/unknown`\n\nThe Protected Route page provides user interface and functionality for protected route related features.\n\n**Interactive Components**: 2\n\n### Feature Gate\n**Route**: `/unknown`\n\nThe Feature Gate page provides user interface and functionality for feature gate related features.\n\n**Interactive Components**: 4\n- ⚡ Upgrade Now, ← Back to Dashboard\n\n### App\n**Route**: `/`\n\nThe App page provides user interface and functionality for app related features.\n\n**Interactive Components**: 5\n\n### Layout\n**Route**: `/layout.tsx`\n\nThe Layout page provides user interface and functionality for layout related features.\n\n**Interactive Components**: 5\n\n### Terms\n**Route**: `/terms`\n\nThe Terms page provides user interface and functionality for terms related features.\n\n**Interactive Components**: 6\n- legal@seoagent.com\n\n### Strategy\n**Route**: `/strategy`\n\nThe Strategy page provides user interface and functionality for strategy related features.\n\n**Interactive Components**: 14\n- input, Join Waitlist\n\n### Privacy\n**Route**: `/privacy`\n\nThe Privacy page provides user interface and functionality for privacy related features.\n\n**Interactive Components**: 6\n- privacy@seoagent.com\n\n### Login\n**Route**: `/login`\n\nThe Login page provides user interface and functionality for login related features.\n\n**Interactive Components**: 13\n- form, input, input, button, button, LoginForm\n\n### Keywords\n**Route**: `/keywords`\n\nThe Keywords page provides user interface and functionality for keywords related features.\n\n**Interactive Components**: 7\n\n### Debug Seo\n**Route**: `/debug-seo`\n\nThe Debug Seo page provides user interface and functionality for debug seo related features.\n\n**Interactive Components**: 17\n- Back to Dashboard, Run All Tests, Run\n\n### Dashboard\n**Route**: `/dashboard`\n\nThe Dashboard page provides user interface and functionality for dashboard related features.\n\n**Interactive Components**: 2\n\n### Content Writer\n**Route**: `/content-writer`\n\nThe Content Writer page provides user interface and functionality for content writer related features.\n\n**Interactive Components**: 57\n- button, Set Up CMS Connection, Create New Article, form, input, select, select, input, Cancel, button, select, button, button, button, View Live Article, Edit in Strapi, button\n\n### Cms Connections\n**Route**: `/cms-connections`\n\nThe Cms Connections page provides user interface and functionality for cms connections related features.\n\n**Interactive Components**: 19\n- Connect CMS, Cancel, Try Again, Get Started\n\n### Chat\n**Route**: `/chat`\n\nThe Chat page provides user interface and functionality for chat related features.\n\n**Interactive Components**: 2\n\n### Autopilot\n**Route**: `/autopilot`\n\nThe Autopilot page provides user interface and functionality for autopilot related features.\n\n**Interactive Components**: 11\n- Get Tracking Script\n\n### Article Writer\n**Route**: `/article-writer`\n\nThe Article Writer page provides user interface and functionality for article writer related features.\n\n**Interactive Components**: 57\n- button, Set Up CMS Connection, Create New Article, form, input, select, select, input, Cancel, button, select, button, button, button, View Live Article, Edit in Strapi, button\n\n### Add Website\n**Route**: `/add-website`\n\nThe Add Website page provides user interface and functionality for add website related features.\n\n**Interactive Components**: 29\n- textarea, Copy Code, Done, form, input, select, input, input, Cancel, button\n\n### Account\n**Route**: `/account`\n\nThe Account page provides user interface and functionality for account related features.\n\n**Interactive Components**: 15\n- input, input, input, Sign Out\n\n### [website Id]\n**Route**: `/website/[websiteId]`\n\nThe [website Id] page provides user interface and functionality for [website id] related features.\n\n**Interactive Components**: 40\n- Return to Dashboard, Dashboard, button, button\n\n### [token]\n**Route**: `/meta-tags/[token]`\n\nThe [token] page provides user interface and functionality for [token] related features.\n\n**Interactive Components**: 39\n- Back to Dashboard, a, Edit, Delete\n\n### [token]\n**Route**: `/alt-tags/[token]`\n\nThe [token] page provides user interface and functionality for [token] related features.\n\n**Interactive Components**: 40\n- Back to Dashboard, a, Edit, Delete\n\n### Cms Connection\n**Route**: `/website/[websiteId]/cms-connection`\n\nThe Cms Connection page provides user interface and functionality for cms connection related features.\n\n**Interactive Components**: 27\n- Return to Dashboard, Dashboard, button, Disconnect\n\n## Navigation Flow\n\nThe application provides seamless navigation between pages through:\n\n- **Back to Dashboard** navigates from [debug-seo](#debug-seo) to [app](#app)\n- **Set Up CMS Connection** navigates from [content-writer](#content-writer) to [cms-connections](#cms-connections)\n- **Set Up CMS Connection** navigates from [article-writer](#article-writer) to [cms-connections](#cms-connections)\n- **Done** navigates from [add-website](#add-website) to [app](#app)\n- **Back to Dashboard** navigates from [token](#token) to [app](#app)\n- **Back to Dashboard** navigates from [token](#token) to [app](#app)\n\n",
    "components": [
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"⚡\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: expression",
          "title: expression"
        ],
        "usage": "Used in Upgrade Badge page",
        "interactions": "Click handler: handleUpgrade",
        "filePath": "src/components/UpgradeBadge.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks ⚡"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Protected Route page",
        "interactions": "No interactions defined",
        "filePath": "src/components/ProtectedRoute.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Protected Route page",
        "interactions": "No interactions defined",
        "filePath": "src/components/ProtectedRoute.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Feature Gate page",
        "interactions": "No interactions defined",
        "filePath": "src/components/FeatureGate.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Feature Gate page",
        "interactions": "No interactions defined",
        "filePath": "src/components/FeatureGate.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"⚡ Upgrade Now\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Feature Gate page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/components/FeatureGate.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks ⚡ Upgrade Now"
          }
        ]
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"← Back to Dashboard\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Feature Gate page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/components/FeatureGate.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks ← Back to Dashboard"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in App page",
        "interactions": "No interactions defined",
        "filePath": "src/app/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in App page",
        "interactions": "No interactions defined",
        "filePath": "src/app/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in App page",
        "interactions": "No interactions defined",
        "filePath": "src/app/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in App page",
        "interactions": "No interactions defined",
        "filePath": "src/app/page.tsx",
        "uiEvents": []
      },
      {
        "name": "LandingPage",
        "slug": "landingpage",
        "purpose": "LandingPage component",
        "props": [],
        "usage": "Used in App page",
        "interactions": "No interactions defined",
        "filePath": "src/app/page.tsx",
        "uiEvents": []
      },
      {
        "name": "html",
        "slug": "html",
        "purpose": "html component",
        "props": [
          "lang: string"
        ],
        "usage": "Used in Layout page",
        "interactions": "No interactions defined",
        "filePath": "src/app/layout.tsx",
        "uiEvents": []
      },
      {
        "name": "body",
        "slug": "body",
        "purpose": "body component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Layout page",
        "interactions": "No interactions defined",
        "filePath": "src/app/layout.tsx",
        "uiEvents": []
      },
      {
        "name": "AuthProvider",
        "slug": "authprovider",
        "purpose": "AuthProvider component",
        "props": [],
        "usage": "Used in Layout page",
        "interactions": "No interactions defined",
        "filePath": "src/app/layout.tsx",
        "uiEvents": []
      },
      {
        "name": "Script",
        "slug": "script",
        "purpose": "Script component",
        "props": [
          "src: string",
          "strategy: string"
        ],
        "usage": "Used in Layout page",
        "interactions": "No interactions defined",
        "filePath": "src/app/layout.tsx",
        "uiEvents": []
      },
      {
        "name": "Script",
        "slug": "script",
        "purpose": "Script component",
        "props": [
          "id: string",
          "strategy: string"
        ],
        "usage": "Used in Layout page",
        "interactions": "No interactions defined",
        "filePath": "src/app/layout.tsx",
        "uiEvents": []
      },
      {
        "name": "ul",
        "slug": "ul",
        "purpose": "ul component",
        "props": [],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Use the service for any unlawful purpose or to solicit unlawful activity\"",
        "props": [],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Attempt to gain unauthorized access to our systems\"",
        "props": [],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Interfere with or disrupt the service or servers\"",
        "props": [],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Use the service to spam or send unsolicited messages\"",
        "props": [],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"legal@seoagent.com\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Terms page",
        "interactions": "No interactions defined",
        "filePath": "src/app/terms/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "placeholder: string",
          "className: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Join Waitlist\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in Strategy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/strategy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ul",
        "slug": "ul",
        "purpose": "ul component",
        "props": [],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Provide, maintain, and improve our SEO automation services\"",
        "props": [],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Process transactions and send related information\"",
        "props": [],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Send technical notices and support messages\"",
        "props": [],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component labeled \"Respond to your comments and questions\"",
        "props": [],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"privacy@seoagent.com\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Privacy page",
        "interactions": "No interactions defined",
        "filePath": "src/app/privacy/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "form",
        "slug": "form",
        "purpose": "Form component for user input and data submission",
        "props": [
          "className: string",
          "onSubmit: expression"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Email address\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "id: string",
          "name: string",
          "type: string",
          "autoComplete: string",
          "required: unknown",
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Password\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "id: string",
          "name: string",
          "type: string",
          "autoComplete: expression",
          "required: unknown",
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "type: string",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "type: string",
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Login page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "Suspense",
        "slug": "suspense",
        "purpose": "Suspense component",
        "props": [
          "fallback: expression"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "LoginForm",
        "slug": "loginform",
        "purpose": "Form component for user input and data submission",
        "props": [],
        "usage": "Used in Login page",
        "interactions": "No interactions defined",
        "filePath": "src/app/login/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "FeatureGate",
        "slug": "featuregate",
        "purpose": "FeatureGate component",
        "props": [
          "feature: string"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Keywords page",
        "interactions": "No interactions defined",
        "filePath": "src/app/keywords/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Back to Dashboard\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Run All Tests\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "Click handler: runAllTests",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Run All Tests"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Website Token\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Current URL\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Images Found\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Current Meta Title\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Run\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Run"
          }
        ]
      },
      {
        "name": "pre",
        "slug": "pre",
        "purpose": "pre component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Debug Seo page",
        "interactions": "No interactions defined",
        "filePath": "src/app/debug-seo/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Dashboard page",
        "interactions": "No interactions defined",
        "filePath": "src/app/dashboard/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Dashboard",
        "slug": "dashboard",
        "purpose": "Dashboard component",
        "props": [],
        "usage": "Used in Dashboard page",
        "interactions": "No interactions defined",
        "filePath": "src/app/dashboard/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "FeatureGate",
        "slug": "featuregate",
        "purpose": "FeatureGate component",
        "props": [
          "feature: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Set Up CMS Connection\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Create New Article\" that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Create New Article"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "form",
        "slug": "form",
        "purpose": "Form component for user input and data submission",
        "props": [
          "onSubmit: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Article Title *\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "onChange: expression",
          "placeholder: string",
          "className: string",
          "required: unknown"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Website *\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string",
          "required: unknown"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"Select website...\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"CMS Connection\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"Select CMS connection...\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"(  )\"",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Target Keywords\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "onChange: expression",
          "placeholder: string",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Cancel\" that triggers user actions",
        "props": [
          "type: string",
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Cancel"
          }
        ]
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "type: string",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Filter by website:\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"All Websites\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"View Live Article\" that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Edit in Strapi\" that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Content Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/content-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "FeatureGate",
        "slug": "featuregate",
        "purpose": "FeatureGate component",
        "props": [
          "feature: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Connect CMS\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Connect CMS"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "OneClickCMSConnection",
        "slug": "oneclickcmsconnection",
        "purpose": "OneClickCMSConnection component",
        "props": [
          "onConnectionComplete: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Cancel\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Cancel"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Try Again\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "Click handler: fetchConnections",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Try Again"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Get Started\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Get Started"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "CMSConnectionsList",
        "slug": "cmsconnectionslist",
        "purpose": "CMSConnectionsList component",
        "props": [
          "connections: expression",
          "onConnectionDeleted: expression",
          "onConnectionUpdated: expression"
        ],
        "usage": "Used in Cms Connections page",
        "interactions": "No interactions defined",
        "filePath": "src/app/cms-connections/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Chat page",
        "interactions": "No interactions defined",
        "filePath": "src/app/chat/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ChatInterface",
        "slug": "chatinterface",
        "purpose": "ChatInterface component",
        "props": [],
        "usage": "Used in Chat page",
        "interactions": "No interactions defined",
        "filePath": "src/app/chat/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "GSCConnection",
        "slug": "gscconnection",
        "purpose": "GSCConnection component",
        "props": [
          "onConnectionChange: expression"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "d: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "code",
        "slug": "code",
        "purpose": "code component labeled \"<script src=“https://agent.seoagent.com/smart.js” data-site-id=“your-site-id”></script>\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Get Tracking Script\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Autopilot page",
        "interactions": "No interactions defined",
        "filePath": "src/app/autopilot/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "FeatureGate",
        "slug": "featuregate",
        "purpose": "FeatureGate component",
        "props": [
          "feature: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Set Up CMS Connection\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Create New Article\" that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Create New Article"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "form",
        "slug": "form",
        "purpose": "Form component for user input and data submission",
        "props": [
          "onSubmit: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Article Title *\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "onChange: expression",
          "placeholder: string",
          "className: string",
          "required: unknown"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Website *\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string",
          "required: unknown"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"Select website...\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"CMS Connection\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"Select CMS connection...\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"(  )\"",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Target Keywords\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "onChange: expression",
          "placeholder: string",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Cancel\" that triggers user actions",
        "props": [
          "type: string",
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Cancel"
          }
        ]
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "type: string",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Filter by website:\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component labeled \"All Websites\"",
        "props": [
          "value: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"View Live Article\" that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Edit in Strapi\" that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Article Writer page",
        "interactions": "No interactions defined",
        "filePath": "src/app/article-writer/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "strong",
        "slug": "strong",
        "purpose": "strong component labeled \"</body>\"",
        "props": [],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "textarea",
        "slug": "textarea",
        "purpose": "Input field for user data entry",
        "props": [
          "className: string",
          "rows: expression",
          "readOnly: unknown",
          "value: expression"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Copy Code\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Copy Code"
          }
        ]
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Done\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "xmlns: string",
          "width: string",
          "height: string",
          "viewBox: string",
          "fill: string",
          "stroke: string",
          "strokeWidth: string",
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "d: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "form",
        "slug": "form",
        "purpose": "Form component for user input and data submission",
        "props": [
          "onSubmit: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "viewBox: string",
          "fill: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "fillRule: string",
          "d: string",
          "clipRule: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Domain Name\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "id: string",
          "value: expression",
          "onChange: expression",
          "className: string",
          "placeholder: string",
          "required: unknown"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Language\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "select",
        "slug": "select",
        "purpose": "Input field for user data entry",
        "props": [
          "id: string",
          "value: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "option",
        "slug": "option",
        "purpose": "option component",
        "props": [
          "key: expression",
          "value: expression"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "id: string",
          "type: string",
          "checked: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Enable AI Meta Tags\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "id: string",
          "type: string",
          "checked: expression",
          "onChange: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Enable AI Image Alt-Tags\"",
        "props": [
          "htmlFor: string",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Cancel\" that triggers user actions",
        "props": [
          "type: string",
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Cancel"
          }
        ]
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "type: string",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "xmlns: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "circle",
        "slug": "circle",
        "purpose": "circle component",
        "props": [
          "className: string",
          "cx: string",
          "cy: string",
          "r: string",
          "stroke: string",
          "strokeWidth: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "className: string",
          "fill: string",
          "d: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in Add Website page",
        "interactions": "No interactions defined",
        "filePath": "src/app/add-website/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ProtectedRoute",
        "slug": "protectedroute",
        "purpose": "ProtectedRoute component",
        "props": [],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Email\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "disabled: unknown",
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"User ID\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "disabled: unknown",
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "label",
        "slug": "label",
        "purpose": "label component labeled \"Account Created\"",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "input",
        "slug": "input",
        "purpose": "Input field for user data entry",
        "props": [
          "type: string",
          "value: expression",
          "disabled: unknown",
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Sign Out\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Account page",
        "interactions": "Click handler: handleSignOut",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Sign Out"
          }
        ]
      },
      {
        "name": "WebsiteManagement",
        "slug": "websitemanagement",
        "purpose": "WebsiteManagement component",
        "props": [],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "SubscriptionManager",
        "slug": "subscriptionmanager",
        "purpose": "SubscriptionManager component",
        "props": [],
        "usage": "Used in Account page",
        "interactions": "No interactions defined",
        "filePath": "src/app/account/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Return to Dashboard\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Return to Dashboard"
          }
        ]
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "nav",
        "slug": "nav",
        "purpose": "Navigation component for site/app navigation",
        "props": [
          "className: string",
          "aria-label: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ol",
        "slug": "ol",
        "purpose": "ol component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Dashboard\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Dashboard"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component",
        "props": [],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "fillRule: string",
          "d: string",
          "clipRule: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "disabled: expression",
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "Click handler: handleStartAudit",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "code",
        "slug": "code",
        "purpose": "code component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [website Id] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Back to Dashboard\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "table",
        "slug": "table",
        "purpose": "table component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "thead",
        "slug": "thead",
        "purpose": "thead component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tbody",
        "slug": "tbody",
        "purpose": "tbody component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "colSpan: expression",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [
          "key: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Edit\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Delete\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/meta-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link labeled \"Back to Dashboard\" that takes users to different pages",
        "props": [
          "href: string",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "header",
        "slug": "header",
        "purpose": "header component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "table",
        "slug": "table",
        "purpose": "table component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "thead",
        "slug": "thead",
        "purpose": "thead component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "th",
        "slug": "th",
        "purpose": "th component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tbody",
        "slug": "tbody",
        "purpose": "tbody component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "colSpan: expression",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "stroke: string",
          "viewBox: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "strokeLinecap: string",
          "strokeLinejoin: string",
          "strokeWidth: expression",
          "d: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "tr",
        "slug": "tr",
        "purpose": "tr component",
        "props": [
          "key: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Image",
        "slug": "image",
        "purpose": "Image component",
        "props": [
          "src: expression",
          "alt: expression",
          "width: expression",
          "height: expression",
          "className: string",
          "onError: expression"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "a",
        "slug": "a",
        "purpose": "Navigation link that takes users to different pages",
        "props": [
          "href: expression",
          "target: string",
          "rel: string",
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "td",
        "slug": "td",
        "purpose": "td component",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Edit\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Delete\" that triggers user actions",
        "props": [
          "className: string"
        ],
        "usage": "Used in [token] page",
        "interactions": "No interactions defined",
        "filePath": "src/app/alt-tags/[token]/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Return to Dashboard\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Return to Dashboard"
          }
        ]
      },
      {
        "name": "Sidebar",
        "slug": "sidebar",
        "purpose": "Sidebar component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression",
          "sidebarExpanded: expression",
          "setSidebarExpanded: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "Header",
        "slug": "header",
        "purpose": "Header component",
        "props": [
          "sidebarOpen: expression",
          "setSidebarOpen: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "main",
        "slug": "main",
        "purpose": "main component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "nav",
        "slug": "nav",
        "purpose": "Navigation component for site/app navigation",
        "props": [
          "className: string",
          "aria-label: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "ol",
        "slug": "ol",
        "purpose": "ol component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component",
        "props": [
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Dashboard\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Dashboard"
          }
        ]
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component",
        "props": [],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "fillRule: string",
          "d: string",
          "clipRule: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks button"
          }
        ]
      },
      {
        "name": "li",
        "slug": "li",
        "purpose": "li component",
        "props": [],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "fillRule: string",
          "d: string",
          "clipRule: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "viewBox: string",
          "fill: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "fillRule: string",
          "d: string",
          "clipRule: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "svg",
        "slug": "svg",
        "purpose": "svg component",
        "props": [
          "className: string",
          "fill: string",
          "viewBox: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "path",
        "slug": "path",
        "purpose": "path component",
        "props": [
          "d: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      },
      {
        "name": "button",
        "slug": "button",
        "purpose": "Interactive button labeled \"Disconnect\" that triggers user actions",
        "props": [
          "onClick: expression",
          "className: string"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "Click handler: inline-function",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": [
          {
            "event": "click",
            "description": "User clicks Disconnect"
          }
        ]
      },
      {
        "name": "OneClickCMSConnection",
        "slug": "oneclickcmsconnection",
        "purpose": "OneClickCMSConnection component",
        "props": [
          "onConnectionComplete: expression"
        ],
        "usage": "Used in Cms Connection page",
        "interactions": "No interactions defined",
        "filePath": "src/app/website/[websiteId]/cms-connection/page.tsx",
        "uiEvents": []
      }
    ],
    "pages": [
      {
        "route": "/unknown",
        "name": "Upgrade Badge",
        "slug": "upgrade-badge",
        "purpose": "The Upgrade Badge page provides user interface and functionality for upgrade badge related features.",
        "components": [
          "button"
        ],
        "componentsMarkdown": "### 🔘 Buttons & Actions\n\n#### button - \"⚡\"\n\n> **Location**: `src/components/UpgradeBadge.tsx:43`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"⚡\" that triggers user actions\n\n**Click Handler**: `handleUpgrade`\n\n**Props**:\n- `onClick` (expression)\n- `className` (expression)\n- `title` (expression)\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/unknown",
        "name": "Protected Route",
        "slug": "protected-route",
        "purpose": "The Protected Route page provides user interface and functionality for protected route related features.",
        "components": [
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### svg\n\n> **Location**: `src/components/ProtectedRoute.tsx:27`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/components/ProtectedRoute.tsx:28`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/unknown",
        "name": "Feature Gate",
        "slug": "feature-gate",
        "purpose": "The Feature Gate page provides user interface and functionality for feature gate related features.",
        "components": [
          "svg",
          "path",
          "button",
          "button"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### svg\n\n> **Location**: `src/components/FeatureGate.tsx:54`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-10 h-10 text-violet-600 dark:text-violet-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/components/FeatureGate.tsx:55`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 15v2m-6 0h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"⚡ Upgrade Now\"\n\n> **Location**: `src/components/FeatureGate.tsx:68`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"⚡ Upgrade Now\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"w-full btn bg-violet-600 hover:bg-violet-700 text-white py-3\"\n\n\n#### button - \"← Back to Dashboard\"\n\n> **Location**: `src/components/FeatureGate.tsx:75`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"← Back to Dashboard\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"w-full btn border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500 text-gray-700 dark:text-gray-300\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/",
        "name": "App",
        "slug": "app",
        "purpose": "The App page provides user interface and functionality for app related features.",
        "components": [
          "svg",
          "path",
          "svg",
          "path",
          "LandingPage"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### svg\n\n> **Location**: `src/app/page.tsx:29`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/page.tsx:30`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### svg\n\n> **Location**: `src/app/page.tsx:51`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/page.tsx:52`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### LandingPage\n\n> **Location**: `src/app/page.tsx:65`  \n> **Type**: other  \n> **Description**: LandingPage component\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/layout.tsx",
        "name": "Layout",
        "slug": "layout",
        "purpose": "The Layout page provides user interface and functionality for layout related features.",
        "components": [
          "html",
          "body",
          "AuthProvider",
          "Script",
          "Script"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### html\n\n> **Location**: `src/app/layout.tsx:49`  \n> **Type**: other  \n> **Description**: html component\n\n**Props**:\n- `lang` (string) = \"en\"\n\n\n#### body\n\n> **Location**: `src/app/layout.tsx:50`  \n> **Type**: other  \n> **Description**: body component\n\n**Props**:\n- `className` (string) = \"antialiased\"\n\n\n#### AuthProvider\n\n> **Location**: `src/app/layout.tsx:51`  \n> **Type**: other  \n> **Description**: AuthProvider component\n\n\n#### Script\n\n> **Location**: `src/app/layout.tsx:56`  \n> **Type**: other  \n> **Description**: Script component\n\n**Props**:\n- `src` (string) = \"/smart.js\"\n- `strategy` (string) = \"afterInteractive\"\n\n\n#### Script\n\n> **Location**: `src/app/layout.tsx:57`  \n> **Type**: other  \n> **Description**: Script component\n\n**Props**:\n- `id` (string) = \"seo-metrics-config\"\n- `strategy` (string) = \"afterInteractive\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/terms",
        "name": "Terms",
        "slug": "terms",
        "purpose": "The Terms page provides user interface and functionality for terms related features.",
        "components": [
          "ul",
          "li",
          "li",
          "li",
          "li",
          "a"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ul\n\n> **Location**: `src/app/terms/page.tsx:43`  \n> **Type**: other  \n> **Description**: ul component\n\n\n#### li - \"Use the service for any unlawful purpose or to solicit unlawful activity\"\n\n> **Location**: `src/app/terms/page.tsx:44`  \n> **Type**: other  \n> **Description**: li component labeled \"Use the service for any unlawful purpose or to solicit unlawful activity\"\n\n\n#### li - \"Attempt to gain unauthorized access to our systems\"\n\n> **Location**: `src/app/terms/page.tsx:45`  \n> **Type**: other  \n> **Description**: li component labeled \"Attempt to gain unauthorized access to our systems\"\n\n\n#### li - \"Interfere with or disrupt the service or servers\"\n\n> **Location**: `src/app/terms/page.tsx:46`  \n> **Type**: other  \n> **Description**: li component labeled \"Interfere with or disrupt the service or servers\"\n\n\n#### li - \"Use the service to spam or send unsolicited messages\"\n\n> **Location**: `src/app/terms/page.tsx:47`  \n> **Type**: other  \n> **Description**: li component labeled \"Use the service to spam or send unsolicited messages\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"legal@seoagent.com\"\n\n> **Location**: `src/app/terms/page.tsx:83`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"legal@seoagent.com\" that takes users to different pages\n\n**Navigates To**: `mailto:legal@seoagent.com`\n\n**Props**:\n- `href` (string) = \"mailto:legal@seoagent.com\"\n- `className` (string) = \"text-violet-600 hover:underline\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/strategy",
        "name": "Strategy",
        "slug": "strategy",
        "purpose": "The Strategy page provides user interface and functionality for strategy related features.",
        "components": [
          "ProtectedRoute",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "input",
          "button"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/strategy/page.tsx:13`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### Sidebar\n\n> **Location**: `src/app/strategy/page.tsx:16`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/strategy/page.tsx:26`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/strategy/page.tsx:31`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/strategy/page.tsx:55`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-10 h-10 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/strategy/page.tsx:56`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"\n\n\n#### svg\n\n> **Location**: `src/app/strategy/page.tsx:75`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-green-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/strategy/page.tsx:76`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n\n\n#### svg\n\n> **Location**: `src/app/strategy/page.tsx:90`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-orange-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/strategy/page.tsx:91`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n\n\n#### svg\n\n> **Location**: `src/app/strategy/page.tsx:105`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-purple-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/strategy/page.tsx:106`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n\n### 📋 Input Fields\n\n#### input\n\n> **Location**: `src/app/strategy/page.tsx:128`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"email\"\n- `placeholder` (string) = \"Enter your email\"\n- `className` (string) = \"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Join Waitlist\"\n\n> **Location**: `src/app/strategy/page.tsx:133`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Join Waitlist\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium py-2 px-6 rounded-lg transition-all duration-200\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/privacy",
        "name": "Privacy",
        "slug": "privacy",
        "purpose": "The Privacy page provides user interface and functionality for privacy related features.",
        "components": [
          "ul",
          "li",
          "li",
          "li",
          "li",
          "a"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ul\n\n> **Location**: `src/app/privacy/page.tsx:31`  \n> **Type**: other  \n> **Description**: ul component\n\n\n#### li - \"Provide, maintain, and improve our SEO automation services\"\n\n> **Location**: `src/app/privacy/page.tsx:32`  \n> **Type**: other  \n> **Description**: li component labeled \"Provide, maintain, and improve our SEO automation services\"\n\n\n#### li - \"Process transactions and send related information\"\n\n> **Location**: `src/app/privacy/page.tsx:33`  \n> **Type**: other  \n> **Description**: li component labeled \"Process transactions and send related information\"\n\n\n#### li - \"Send technical notices and support messages\"\n\n> **Location**: `src/app/privacy/page.tsx:34`  \n> **Type**: other  \n> **Description**: li component labeled \"Send technical notices and support messages\"\n\n\n#### li - \"Respond to your comments and questions\"\n\n> **Location**: `src/app/privacy/page.tsx:35`  \n> **Type**: other  \n> **Description**: li component labeled \"Respond to your comments and questions\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"privacy@seoagent.com\"\n\n> **Location**: `src/app/privacy/page.tsx:65`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"privacy@seoagent.com\" that takes users to different pages\n\n**Navigates To**: `mailto:privacy@seoagent.com`\n\n**Props**:\n- `href` (string) = \"mailto:privacy@seoagent.com\"\n- `className` (string) = \"text-violet-600 hover:underline\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/login",
        "name": "Login",
        "slug": "login",
        "purpose": "The Login page provides user interface and functionality for login related features.",
        "components": [
          "svg",
          "path",
          "form",
          "label",
          "input",
          "label",
          "input",
          "button",
          "button",
          "Suspense",
          "svg",
          "path",
          "LoginForm"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### svg\n\n> **Location**: `src/app/login/page.tsx:59`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/login/page.tsx:60`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### label - \"Email address\"\n\n> **Location**: `src/app/login/page.tsx:76`  \n> **Type**: other  \n> **Description**: label component labeled \"Email address\"\n\n**Props**:\n- `htmlFor` (string) = \"email\"\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n\n\n#### label - \"Password\"\n\n> **Location**: `src/app/login/page.tsx:94`  \n> **Type**: other  \n> **Description**: label component labeled \"Password\"\n\n**Props**:\n- `htmlFor` (string) = \"password\"\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n\n\n#### Suspense\n\n> **Location**: `src/app/login/page.tsx:162`  \n> **Type**: other  \n> **Description**: Suspense component\n\n**Props**:\n- `fallback` (expression)\n\n\n#### svg\n\n> **Location**: `src/app/login/page.tsx:167`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/login/page.tsx:168`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n\n### 📝 Forms & Input\n\n#### form\n\n> **Location**: `src/app/login/page.tsx:74`  \n> **Type**: form  \n> **Description**: Form component for user input and data submission\n\n**Props**:\n- `className` (string) = \"space-y-6\"\n- `onSubmit` (expression)\n\n\n#### LoginForm\n\n> **Location**: `src/app/login/page.tsx:178`  \n> **Type**: form  \n> **Description**: Form component for user input and data submission\n\n\n\n### 📋 Input Fields\n\n#### input\n\n> **Location**: `src/app/login/page.tsx:80`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `id` (string) = \"email\"\n- `name` (string) = \"email\"\n- `type` (string) = \"email\"\n- `autoComplete` (string) = \"email\"\n- `required` (unknown)\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm\"\n\n\n#### input\n\n> **Location**: `src/app/login/page.tsx:98`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `id` (string) = \"password\"\n- `name` (string) = \"password\"\n- `type` (string) = \"password\"\n- `autoComplete` (expression)\n- `required` (unknown)\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white sm:text-sm\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button\n\n> **Location**: `src/app/login/page.tsx:118`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Props**:\n- `type` (string) = \"submit\"\n- `disabled` (expression)\n- `className` (string) = \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n\n\n#### button\n\n> **Location**: `src/app/login/page.tsx:141`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `type` (string) = \"button\"\n- `onClick` (expression)\n- `className` (string) = \"w-full flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/keywords",
        "name": "Keywords",
        "slug": "keywords",
        "purpose": "The Keywords page provides user interface and functionality for keywords related features.",
        "components": [
          "ProtectedRoute",
          "FeatureGate",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/keywords/page.tsx:14`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### FeatureGate\n\n> **Location**: `src/app/keywords/page.tsx:15`  \n> **Type**: other  \n> **Description**: FeatureGate component\n\n**Props**:\n- `feature` (string) = \"keywordsTool\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/keywords/page.tsx:18`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/keywords/page.tsx:26`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/keywords/page.tsx:31`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/keywords/page.tsx:45`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-blue-600 dark:text-blue-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/keywords/page.tsx:46`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/debug-seo",
        "name": "Debug Seo",
        "slug": "debug-seo",
        "purpose": "The Debug Seo page provides user interface and functionality for debug seo related features.",
        "components": [
          "Sidebar",
          "Header",
          "main",
          "a",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "label",
          "label",
          "label",
          "label",
          "header",
          "button",
          "pre",
          "header"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### Sidebar\n\n> **Location**: `src/app/debug-seo/page.tsx:281`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/debug-seo/page.tsx:289`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/debug-seo/page.tsx:294`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/debug-seo/page.tsx:305`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/debug-seo/page.tsx:306`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 19l-7-7 7-7\"\n\n\n#### svg\n\n> **Location**: `src/app/debug-seo/page.tsx:323`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/debug-seo/page.tsx:324`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n\n\n#### label - \"Website Token\"\n\n> **Location**: `src/app/debug-seo/page.tsx:338`  \n> **Type**: other  \n> **Description**: label component labeled \"Website Token\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1\"\n\n\n#### label - \"Current URL\"\n\n> **Location**: `src/app/debug-seo/page.tsx:346`  \n> **Type**: other  \n> **Description**: label component labeled \"Current URL\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1\"\n\n\n#### label - \"Images Found\"\n\n> **Location**: `src/app/debug-seo/page.tsx:354`  \n> **Type**: other  \n> **Description**: label component labeled \"Images Found\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1\"\n\n\n#### label - \"Current Meta Title\"\n\n> **Location**: `src/app/debug-seo/page.tsx:362`  \n> **Type**: other  \n> **Description**: label component labeled \"Current Meta Title\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1\"\n\n\n#### header\n\n> **Location**: `src/app/debug-seo/page.tsx:374`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n#### pre\n\n> **Location**: `src/app/debug-seo/page.tsx:406`  \n> **Type**: other  \n> **Description**: pre component\n\n**Props**:\n- `className` (string) = \"text-xs text-green-700 dark:text-green-300 overflow-x-auto\"\n\n\n#### header\n\n> **Location**: `src/app/debug-seo/page.tsx:437`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Back to Dashboard\"\n\n> **Location**: `src/app/debug-seo/page.tsx:301`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Back to Dashboard\" that takes users to different pages\n\n**Navigates To**: [App](#app) (`/`)\n\n**Props**:\n- `href` (string) = \"/\"\n- `className` (string) = \"inline-flex items-center text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200 transition-colors mr-4\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Run All Tests\"\n\n> **Location**: `src/app/debug-seo/page.tsx:319`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Run All Tests\" that triggers user actions\n\n**Click Handler**: `runAllTests`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n#### button - \"Run\"\n\n> **Location**: `src/app/debug-seo/page.tsx:392`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Run\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn-sm bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-100\"\n\n\n\n",
        "navigationLinks": [
          "[App](#app)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/dashboard",
        "name": "Dashboard",
        "slug": "dashboard",
        "purpose": "The Dashboard page provides user interface and functionality for dashboard related features.",
        "components": [
          "ProtectedRoute",
          "Dashboard"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/dashboard/page.tsx:8`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### Dashboard\n\n> **Location**: `src/app/dashboard/page.tsx:9`  \n> **Type**: other  \n> **Description**: Dashboard component\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/content-writer",
        "name": "Content Writer",
        "slug": "content-writer",
        "purpose": "The Content Writer page provides user interface and functionality for content writer related features.",
        "components": [
          "ProtectedRoute",
          "FeatureGate",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "form",
          "label",
          "input",
          "label",
          "select",
          "option",
          "option",
          "label",
          "select",
          "option",
          "option",
          "label",
          "input",
          "button",
          "button",
          "label",
          "select",
          "option",
          "option",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "button",
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/content-writer/page.tsx:413`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### FeatureGate\n\n> **Location**: `src/app/content-writer/page.tsx:414`  \n> **Type**: other  \n> **Description**: FeatureGate component\n\n**Props**:\n- `feature` (string) = \"articleGeneration\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/content-writer/page.tsx:417`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/content-writer/page.tsx:425`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/content-writer/page.tsx:430`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:450`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"h-5 w-5 text-red-400 flex-shrink-0\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:451`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:460`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:461`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M6 18L18 6M6 6l12 12\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:473`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-orange-600 dark:text-orange-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:474`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:487`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:488`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:504`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:505`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n\n\n#### label - \"Article Title *\"\n\n> **Location**: `src/app/content-writer/page.tsx:520`  \n> **Type**: other  \n> **Description**: label component labeled \"Article Title *\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### label - \"Website *\"\n\n> **Location**: `src/app/content-writer/page.tsx:534`  \n> **Type**: other  \n> **Description**: label component labeled \"Website *\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### option - \"Select website...\"\n\n> **Location**: `src/app/content-writer/page.tsx:543`  \n> **Type**: other  \n> **Description**: option component labeled \"Select website...\"\n\n**Props**:\n- `value` (string)\n\n\n#### option\n\n> **Location**: `src/app/content-writer/page.tsx:545`  \n> **Type**: other  \n> **Description**: option component\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### label - \"CMS Connection\"\n\n> **Location**: `src/app/content-writer/page.tsx:553`  \n> **Type**: other  \n> **Description**: label component labeled \"CMS Connection\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### option - \"Select CMS connection...\"\n\n> **Location**: `src/app/content-writer/page.tsx:561`  \n> **Type**: other  \n> **Description**: option component labeled \"Select CMS connection...\"\n\n**Props**:\n- `value` (string)\n\n\n#### option - \"(  )\"\n\n> **Location**: `src/app/content-writer/page.tsx:565`  \n> **Type**: other  \n> **Description**: option component labeled \"(  )\"\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### label - \"Target Keywords\"\n\n> **Location**: `src/app/content-writer/page.tsx:573`  \n> **Type**: other  \n> **Description**: label component labeled \"Target Keywords\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### label - \"Filter by website:\"\n\n> **Location**: `src/app/content-writer/page.tsx:617`  \n> **Type**: other  \n> **Description**: label component labeled \"Filter by website:\"\n\n**Props**:\n- `className` (string) = \"text-sm text-gray-600 dark:text-gray-400\"\n\n\n#### option - \"All Websites\"\n\n> **Location**: `src/app/content-writer/page.tsx:623`  \n> **Type**: other  \n> **Description**: option component labeled \"All Websites\"\n\n**Props**:\n- `value` (string) = \"all\"\n\n\n#### option\n\n> **Location**: `src/app/content-writer/page.tsx:625`  \n> **Type**: other  \n> **Description**: option component\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:643`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-12 h-12 text-gray-400 mx-auto mb-4\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:644`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:723`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:724`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:744`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:745`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:765`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:766`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M7 16l1.5-1.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:780`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:781`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:793`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:794`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n\n\n#### svg\n\n> **Location**: `src/app/content-writer/page.tsx:812`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/content-writer/page.tsx:813`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:456`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"ml-auto text-red-400 hover:text-red-600\"\n\n\n#### button - \"Create New Article\"\n\n> **Location**: `src/app/content-writer/page.tsx:499`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Create New Article\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-4 py-2 bg-violet-600 hover:bg-violet-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button - \"Cancel\"\n\n> **Location**: `src/app/content-writer/page.tsx:589`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Cancel\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `type` (string) = \"button\"\n- `onClick` (expression)\n- `className` (string) = \"px-4 py-2 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:596`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Props**:\n- `type` (string) = \"submit\"\n- `disabled` (expression)\n- `className` (string) = \"px-4 py-2 bg-violet-600 hover:bg-violet-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:711`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:732`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-orange-600 hover:bg-orange-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:753`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-green-600 hover:bg-green-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/content-writer/page.tsx:800`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-red-600 hover:bg-red-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Set Up CMS Connection\"\n\n> **Location**: `src/app/content-writer/page.tsx:483`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Set Up CMS Connection\" that takes users to different pages\n\n**Navigates To**: [Cms Connections](#cms-connections) (`/cms-connections`)\n\n**Props**:\n- `href` (string) = \"/cms-connections\"\n- `className` (string) = \"inline-flex items-center px-4 py-2 bg-violet-600 hover:bg-violet-700 text-white rounded-lg transition-colors\"\n\n\n#### a - \"View Live Article\"\n\n> **Location**: `src/app/content-writer/page.tsx:774`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"View Live Article\" that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n\n\n#### a - \"Edit in Strapi\"\n\n> **Location**: `src/app/content-writer/page.tsx:787`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Edit in Strapi\" that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors\"\n\n\n\n### 📝 Forms & Input\n\n#### form\n\n> **Location**: `src/app/content-writer/page.tsx:518`  \n> **Type**: form  \n> **Description**: Form component for user input and data submission\n\n**Props**:\n- `onSubmit` (expression)\n- `className` (string) = \"space-y-4\"\n\n\n\n### 📋 Input Fields\n\n#### input\n\n> **Location**: `src/app/content-writer/page.tsx:523`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `onChange` (expression)\n- `placeholder` (string) = \"Enter article title...\"\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n- `required` (unknown)\n\n\n#### select\n\n> **Location**: `src/app/content-writer/page.tsx:537`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n- `required` (unknown)\n\n\n#### select\n\n> **Location**: `src/app/content-writer/page.tsx:556`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n#### input\n\n> **Location**: `src/app/content-writer/page.tsx:576`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `onChange` (expression)\n- `placeholder` (string) = \"keyword1, keyword2, keyword3\"\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n#### select\n\n> **Location**: `src/app/content-writer/page.tsx:618`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"text-sm border border-gray-300 dark:border-gray-600 rounded-md px-3 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n\n",
        "navigationLinks": [
          "[Cms Connections](#cms-connections)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/cms-connections",
        "name": "Cms Connections",
        "slug": "cms-connections",
        "purpose": "The Cms Connections page provides user interface and functionality for cms connections related features.",
        "components": [
          "ProtectedRoute",
          "FeatureGate",
          "Sidebar",
          "Header",
          "main",
          "button",
          "svg",
          "path",
          "OneClickCMSConnection",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "CMSConnectionsList"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/cms-connections/page.tsx:93`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### FeatureGate\n\n> **Location**: `src/app/cms-connections/page.tsx:94`  \n> **Type**: other  \n> **Description**: FeatureGate component\n\n**Props**:\n- `feature` (string) = \"articleGeneration\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/cms-connections/page.tsx:97`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/cms-connections/page.tsx:105`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/cms-connections/page.tsx:110`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/cms-connections/page.tsx:124`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/cms-connections/page.tsx:125`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 4v16m8-8H4\"\n\n\n#### OneClickCMSConnection\n\n> **Location**: `src/app/cms-connections/page.tsx:133`  \n> **Type**: other  \n> **Description**: OneClickCMSConnection component\n\n**Props**:\n- `onConnectionComplete` (expression)\n- `className` (string)\n\n\n#### svg\n\n> **Location**: `src/app/cms-connections/page.tsx:157`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-red-600 dark:text-red-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/cms-connections/page.tsx:158`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z\"\n\n\n#### svg\n\n> **Location**: `src/app/cms-connections/page.tsx:175`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-violet-600 dark:text-violet-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/cms-connections/page.tsx:176`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n\n\n#### svg\n\n> **Location**: `src/app/cms-connections/page.tsx:189`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/cms-connections/page.tsx:190`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 4v16m8-8H4\"\n\n\n#### CMSConnectionsList\n\n> **Location**: `src/app/cms-connections/page.tsx:197`  \n> **Type**: other  \n> **Description**: CMSConnectionsList component\n\n**Props**:\n- `connections` (expression)\n- `onConnectionDeleted` (expression)\n- `onConnectionUpdated` (expression)\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Connect CMS\"\n\n> **Location**: `src/app/cms-connections/page.tsx:120`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Connect CMS\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n#### button - \"Cancel\"\n\n> **Location**: `src/app/cms-connections/page.tsx:138`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Cancel\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"text-gray-500 hover:text-gray-700 text-sm\"\n\n\n#### button - \"Try Again\"\n\n> **Location**: `src/app/cms-connections/page.tsx:163`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Try Again\" that triggers user actions\n\n**Click Handler**: `fetchConnections`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-blue-600 hover:bg-blue-700 text-white\"\n\n\n#### button - \"Get Started\"\n\n> **Location**: `src/app/cms-connections/page.tsx:185`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Get Started\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/chat",
        "name": "Chat",
        "slug": "chat",
        "purpose": "The Chat page provides user interface and functionality for chat related features.",
        "components": [
          "ProtectedRoute",
          "ChatInterface"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/chat/page.tsx:9`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### ChatInterface\n\n> **Location**: `src/app/chat/page.tsx:10`  \n> **Type**: other  \n> **Description**: ChatInterface component\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/autopilot",
        "name": "Autopilot",
        "slug": "autopilot",
        "purpose": "The Autopilot page provides user interface and functionality for autopilot related features.",
        "components": [
          "ProtectedRoute",
          "Sidebar",
          "Header",
          "main",
          "GSCConnection",
          "svg",
          "path",
          "code",
          "button",
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/autopilot/page.tsx:16`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### Sidebar\n\n> **Location**: `src/app/autopilot/page.tsx:19`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/autopilot/page.tsx:29`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/autopilot/page.tsx:34`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### GSCConnection\n\n> **Location**: `src/app/autopilot/page.tsx:58`  \n> **Type**: other  \n> **Description**: GSCConnection component\n\n**Props**:\n- `onConnectionChange` (expression)\n\n\n#### svg\n\n> **Location**: `src/app/autopilot/page.tsx:65`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 text-purple-600\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/autopilot/page.tsx:66`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `d` (string) = \"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"\n\n\n#### code - \"<script src=“https://agent.seoagent.com/smart.js” data-site-id=“your-site-id”></script>\"\n\n> **Location**: `src/app/autopilot/page.tsx:82`  \n> **Type**: other  \n> **Description**: code component labeled \"<script src=“https://agent.seoagent.com/smart.js” data-site-id=“your-site-id”></script>\"\n\n**Props**:\n- `className` (string) = \"text-sm text-gray-700 dark:text-gray-300\"\n\n\n#### svg\n\n> **Location**: `src/app/autopilot/page.tsx:132`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-gray-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/autopilot/page.tsx:133`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Get Tracking Script\"\n\n> **Location**: `src/app/autopilot/page.tsx:98`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Get Tracking Script\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"w-full bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/article-writer",
        "name": "Article Writer",
        "slug": "article-writer",
        "purpose": "The Article Writer page provides user interface and functionality for article writer related features.",
        "components": [
          "ProtectedRoute",
          "FeatureGate",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "form",
          "label",
          "input",
          "label",
          "select",
          "option",
          "option",
          "label",
          "select",
          "option",
          "option",
          "label",
          "input",
          "button",
          "button",
          "label",
          "select",
          "option",
          "option",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "a",
          "svg",
          "path",
          "button",
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/article-writer/page.tsx:413`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### FeatureGate\n\n> **Location**: `src/app/article-writer/page.tsx:414`  \n> **Type**: other  \n> **Description**: FeatureGate component\n\n**Props**:\n- `feature` (string) = \"articleGeneration\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/article-writer/page.tsx:417`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/article-writer/page.tsx:425`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/article-writer/page.tsx:430`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:443`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"h-5 w-5 text-red-400 flex-shrink-0\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:444`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:453`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:454`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M6 18L18 6M6 6l12 12\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:466`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-orange-600 dark:text-orange-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:467`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:480`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:481`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:497`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:498`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n\n\n#### label - \"Article Title *\"\n\n> **Location**: `src/app/article-writer/page.tsx:513`  \n> **Type**: other  \n> **Description**: label component labeled \"Article Title *\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### label - \"Website *\"\n\n> **Location**: `src/app/article-writer/page.tsx:527`  \n> **Type**: other  \n> **Description**: label component labeled \"Website *\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### option - \"Select website...\"\n\n> **Location**: `src/app/article-writer/page.tsx:536`  \n> **Type**: other  \n> **Description**: option component labeled \"Select website...\"\n\n**Props**:\n- `value` (string)\n\n\n#### option\n\n> **Location**: `src/app/article-writer/page.tsx:538`  \n> **Type**: other  \n> **Description**: option component\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### label - \"CMS Connection\"\n\n> **Location**: `src/app/article-writer/page.tsx:546`  \n> **Type**: other  \n> **Description**: label component labeled \"CMS Connection\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### option - \"Select CMS connection...\"\n\n> **Location**: `src/app/article-writer/page.tsx:554`  \n> **Type**: other  \n> **Description**: option component labeled \"Select CMS connection...\"\n\n**Props**:\n- `value` (string)\n\n\n#### option - \"(  )\"\n\n> **Location**: `src/app/article-writer/page.tsx:558`  \n> **Type**: other  \n> **Description**: option component labeled \"(  )\"\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### label - \"Target Keywords\"\n\n> **Location**: `src/app/article-writer/page.tsx:566`  \n> **Type**: other  \n> **Description**: label component labeled \"Target Keywords\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### label - \"Filter by website:\"\n\n> **Location**: `src/app/article-writer/page.tsx:610`  \n> **Type**: other  \n> **Description**: label component labeled \"Filter by website:\"\n\n**Props**:\n- `className` (string) = \"text-sm text-gray-600 dark:text-gray-400\"\n\n\n#### option - \"All Websites\"\n\n> **Location**: `src/app/article-writer/page.tsx:616`  \n> **Type**: other  \n> **Description**: option component labeled \"All Websites\"\n\n**Props**:\n- `value` (string) = \"all\"\n\n\n#### option\n\n> **Location**: `src/app/article-writer/page.tsx:618`  \n> **Type**: other  \n> **Description**: option component\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:636`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-12 h-12 text-gray-400 mx-auto mb-4\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:637`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:716`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:717`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:737`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:738`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:758`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:759`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M7 16l1.5-1.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:773`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:774`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:786`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:787`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n\n\n#### svg\n\n> **Location**: `src/app/article-writer/page.tsx:805`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-1\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/article-writer/page.tsx:806`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:449`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"ml-auto text-red-400 hover:text-red-600\"\n\n\n#### button - \"Create New Article\"\n\n> **Location**: `src/app/article-writer/page.tsx:492`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Create New Article\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-4 py-2 bg-violet-600 hover:bg-violet-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button - \"Cancel\"\n\n> **Location**: `src/app/article-writer/page.tsx:582`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Cancel\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `type` (string) = \"button\"\n- `onClick` (expression)\n- `className` (string) = \"px-4 py-2 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:589`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Props**:\n- `type` (string) = \"submit\"\n- `disabled` (expression)\n- `className` (string) = \"px-4 py-2 bg-violet-600 hover:bg-violet-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:704`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:725`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-orange-600 hover:bg-orange-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:746`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-green-600 hover:bg-green-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n#### button\n\n> **Location**: `src/app/article-writer/page.tsx:793`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-red-600 hover:bg-red-700 disabled:opacity-50 text-white rounded-lg transition-colors\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Set Up CMS Connection\"\n\n> **Location**: `src/app/article-writer/page.tsx:476`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Set Up CMS Connection\" that takes users to different pages\n\n**Navigates To**: [Cms Connections](#cms-connections) (`/cms-connections`)\n\n**Props**:\n- `href` (string) = \"/cms-connections\"\n- `className` (string) = \"inline-flex items-center px-4 py-2 bg-violet-600 hover:bg-violet-700 text-white rounded-lg transition-colors\"\n\n\n#### a - \"View Live Article\"\n\n> **Location**: `src/app/article-writer/page.tsx:767`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"View Live Article\" that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n\n\n#### a - \"Edit in Strapi\"\n\n> **Location**: `src/app/article-writer/page.tsx:780`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Edit in Strapi\" that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"inline-flex items-center px-3 py-1 text-sm bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors\"\n\n\n\n### 📝 Forms & Input\n\n#### form\n\n> **Location**: `src/app/article-writer/page.tsx:511`  \n> **Type**: form  \n> **Description**: Form component for user input and data submission\n\n**Props**:\n- `onSubmit` (expression)\n- `className` (string) = \"space-y-4\"\n\n\n\n### 📋 Input Fields\n\n#### input\n\n> **Location**: `src/app/article-writer/page.tsx:516`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `onChange` (expression)\n- `placeholder` (string) = \"Enter article title...\"\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n- `required` (unknown)\n\n\n#### select\n\n> **Location**: `src/app/article-writer/page.tsx:530`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n- `required` (unknown)\n\n\n#### select\n\n> **Location**: `src/app/article-writer/page.tsx:549`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n#### input\n\n> **Location**: `src/app/article-writer/page.tsx:569`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `onChange` (expression)\n- `placeholder` (string) = \"keyword1, keyword2, keyword3\"\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n#### select\n\n> **Location**: `src/app/article-writer/page.tsx:611`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"text-sm border border-gray-300 dark:border-gray-600 rounded-md px-3 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-violet-500 focus:border-transparent\"\n\n\n\n",
        "navigationLinks": [
          "[Cms Connections](#cms-connections)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/add-website",
        "name": "Add Website",
        "slug": "add-website",
        "purpose": "The Add Website page provides user interface and functionality for add website related features.",
        "components": [
          "ProtectedRoute",
          "Sidebar",
          "Header",
          "main",
          "strong",
          "textarea",
          "button",
          "a",
          "svg",
          "path",
          "form",
          "svg",
          "path",
          "label",
          "input",
          "label",
          "select",
          "option",
          "input",
          "label",
          "input",
          "label",
          "button",
          "button",
          "svg",
          "circle",
          "path",
          "svg",
          "path"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/add-website/page.tsx:128`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### Sidebar\n\n> **Location**: `src/app/add-website/page.tsx:131`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/add-website/page.tsx:139`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/add-website/page.tsx:144`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### strong - \"</body>\"\n\n> **Location**: `src/app/add-website/page.tsx:152`  \n> **Type**: other  \n> **Description**: strong component labeled \"</body>\"\n\n\n#### svg\n\n> **Location**: `src/app/add-website/page.tsx:182`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `xmlns` (string) = \"http://www.w3.org/2000/svg\"\n- `width` (string) = \"24\"\n- `height` (string) = \"24\"\n- `viewBox` (string) = \"0 0 24 24\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `strokeWidth` (string) = \"2\"\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `className` (string) = \"mr-2\"\n\n\n#### path\n\n> **Location**: `src/app/add-website/page.tsx:183`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `d` (string) = \"M5 12l5 5l10 -10\"\n\n\n#### svg\n\n> **Location**: `src/app/add-website/page.tsx:208`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"h-5 w-5 text-red-400\"\n- `viewBox` (string) = \"0 0 20 20\"\n- `fill` (string) = \"currentColor\"\n\n\n#### path\n\n> **Location**: `src/app/add-website/page.tsx:209`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `fillRule` (string) = \"evenodd\"\n- `d` (string) = \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n- `clipRule` (string) = \"evenodd\"\n\n\n#### label - \"Domain Name\"\n\n> **Location**: `src/app/add-website/page.tsx:220`  \n> **Type**: other  \n> **Description**: label component labeled \"Domain Name\"\n\n**Props**:\n- `htmlFor` (string) = \"domain\"\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### label - \"Language\"\n\n> **Location**: `src/app/add-website/page.tsx:238`  \n> **Type**: other  \n> **Description**: label component labeled \"Language\"\n\n**Props**:\n- `htmlFor` (string) = \"language\"\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n\n\n#### option\n\n> **Location**: `src/app/add-website/page.tsx:248`  \n> **Type**: other  \n> **Description**: option component\n\n**Props**:\n- `key` (expression)\n- `value` (expression)\n\n\n#### label - \"Enable AI Meta Tags\"\n\n> **Location**: `src/app/add-website/page.tsx:269`  \n> **Type**: other  \n> **Description**: label component labeled \"Enable AI Meta Tags\"\n\n**Props**:\n- `htmlFor` (string) = \"enableMetaTags\"\n- `className` (string) = \"ml-2 block text-sm text-gray-900 dark:text-gray-100\"\n\n\n#### label - \"Enable AI Image Alt-Tags\"\n\n> **Location**: `src/app/add-website/page.tsx:285`  \n> **Type**: other  \n> **Description**: label component labeled \"Enable AI Image Alt-Tags\"\n\n**Props**:\n- `htmlFor` (string) = \"enableImageTags\"\n- `className` (string) = \"ml-2 block text-sm text-gray-900 dark:text-gray-100\"\n\n\n#### svg\n\n> **Location**: `src/app/add-website/page.tsx:309`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\n- `xmlns` (string) = \"http://www.w3.org/2000/svg\"\n- `fill` (string) = \"none\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### circle\n\n> **Location**: `src/app/add-website/page.tsx:310`  \n> **Type**: other  \n> **Description**: circle component\n\n**Props**:\n- `className` (string) = \"opacity-25\"\n- `cx` (string) = \"12\"\n- `cy` (string) = \"12\"\n- `r` (string) = \"10\"\n- `stroke` (string) = \"currentColor\"\n- `strokeWidth` (string) = \"4\"\n\n\n#### path\n\n> **Location**: `src/app/add-website/page.tsx:311`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `className` (string) = \"opacity-75\"\n- `fill` (string) = \"currentColor\"\n- `d` (string) = \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n\n\n#### svg\n\n> **Location**: `src/app/add-website/page.tsx:317`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/add-website/page.tsx:318`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n\n\n\n### 📋 Input Fields\n\n#### textarea\n\n> **Location**: `src/app/add-website/page.tsx:159`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `className` (string) = \"w-full p-4 bg-gray-50 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg text-sm font-mono\"\n- `rows` (expression)\n- `readOnly` (unknown)\n- `value` (expression)\n\n\n#### input\n\n> **Location**: `src/app/add-website/page.tsx:223`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `id` (string) = \"domain\"\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n- `placeholder` (string) = \"example.com\"\n- `required` (unknown)\n\n\n#### select\n\n> **Location**: `src/app/add-website/page.tsx:241`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `id` (string) = \"language\"\n- `value` (expression)\n- `onChange` (expression)\n- `className` (string) = \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n\n\n#### input\n\n> **Location**: `src/app/add-website/page.tsx:262`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `id` (string) = \"enableMetaTags\"\n- `type` (string) = \"checkbox\"\n- `checked` (expression)\n- `onChange` (expression)\n- `className` (string) = \"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\"\n\n\n#### input\n\n> **Location**: `src/app/add-website/page.tsx:278`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `id` (string) = \"enableImageTags\"\n- `type` (string) = \"checkbox\"\n- `checked` (expression)\n- `onChange` (expression)\n- `className` (string) = \"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Copy Code\"\n\n> **Location**: `src/app/add-website/page.tsx:170`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Copy Code\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n#### button - \"Cancel\"\n\n> **Location**: `src/app/add-website/page.tsx:295`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Cancel\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `type` (string) = \"button\"\n- `onClick` (expression)\n- `className` (string) = \"btn border-gray-200 dark:border-gray-700/60 hover:border-gray-300 dark:hover:border-gray-600 text-gray-800 dark:text-gray-300\"\n\n\n#### button\n\n> **Location**: `src/app/add-website/page.tsx:302`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Props**:\n- `type` (string) = \"submit\"\n- `disabled` (expression)\n- `className` (string) = \"btn bg-violet-500 hover:bg-violet-600 text-white disabled:opacity-50 disabled:cursor-not-allowed\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Done\"\n\n> **Location**: `src/app/add-website/page.tsx:178`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Done\" that takes users to different pages\n\n**Navigates To**: [App](#app) (`/`)\n\n**Props**:\n- `href` (string) = \"/\"\n- `className` (string) = \"btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white\"\n\n\n\n### 📝 Forms & Input\n\n#### form\n\n> **Location**: `src/app/add-website/page.tsx:202`  \n> **Type**: form  \n> **Description**: Form component for user input and data submission\n\n**Props**:\n- `onSubmit` (expression)\n- `className` (string) = \"space-y-6\"\n\n\n\n",
        "navigationLinks": [
          "[App](#app)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/account",
        "name": "Account",
        "slug": "account",
        "purpose": "The Account page provides user interface and functionality for account related features.",
        "components": [
          "ProtectedRoute",
          "Sidebar",
          "Header",
          "main",
          "header",
          "label",
          "input",
          "label",
          "input",
          "label",
          "input",
          "header",
          "button",
          "WebsiteManagement",
          "SubscriptionManager"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### ProtectedRoute\n\n> **Location**: `src/app/account/page.tsx:21`  \n> **Type**: other  \n> **Description**: ProtectedRoute component\n\n\n#### Sidebar\n\n> **Location**: `src/app/account/page.tsx:24`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/account/page.tsx:32`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/account/page.tsx:37`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### header\n\n> **Location**: `src/app/account/page.tsx:51`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n#### label - \"Email\"\n\n> **Location**: `src/app/account/page.tsx:57`  \n> **Type**: other  \n> **Description**: label component labeled \"Email\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n\n\n#### label - \"User ID\"\n\n> **Location**: `src/app/account/page.tsx:68`  \n> **Type**: other  \n> **Description**: label component labeled \"User ID\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n\n\n#### label - \"Account Created\"\n\n> **Location**: `src/app/account/page.tsx:79`  \n> **Type**: other  \n> **Description**: label component labeled \"Account Created\"\n\n**Props**:\n- `className` (string) = \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n\n\n#### header\n\n> **Location**: `src/app/account/page.tsx:95`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n#### WebsiteManagement\n\n> **Location**: `src/app/account/page.tsx:120`  \n> **Type**: other  \n> **Description**: WebsiteManagement component\n\n\n#### SubscriptionManager\n\n> **Location**: `src/app/account/page.tsx:125`  \n> **Type**: other  \n> **Description**: SubscriptionManager component\n\n\n\n### 📋 Input Fields\n\n#### input\n\n> **Location**: `src/app/account/page.tsx:60`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"email\"\n- `value` (expression)\n- `disabled` (unknown)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 text-gray-500 dark:text-gray-400\"\n\n\n#### input\n\n> **Location**: `src/app/account/page.tsx:71`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `disabled` (unknown)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 text-gray-500 dark:text-gray-400 font-mono text-xs\"\n\n\n#### input\n\n> **Location**: `src/app/account/page.tsx:82`  \n> **Type**: input  \n> **Description**: Input field for user data entry\n\n**Props**:\n- `type` (string) = \"text\"\n- `value` (expression)\n- `disabled` (unknown)\n- `className` (string) = \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 text-gray-500 dark:text-gray-400\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Sign Out\"\n\n> **Location**: `src/app/account/page.tsx:107`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Sign Out\" that triggers user actions\n\n**Click Handler**: `handleSignOut`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn border-gray-200 dark:border-gray-700/60 hover:border-gray-300 dark:hover:border-gray-600 text-gray-800 dark:text-gray-300\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/website/[websiteId]",
        "name": "[website Id]",
        "slug": "website-id",
        "purpose": "The [website Id] page provides user interface and functionality for [website id] related features.",
        "components": [
          "Sidebar",
          "Header",
          "main",
          "Sidebar",
          "Header",
          "main",
          "button",
          "Sidebar",
          "Header",
          "main",
          "nav",
          "ol",
          "li",
          "button",
          "svg",
          "path",
          "li",
          "svg",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "svg",
          "path",
          "button",
          "svg",
          "path",
          "path",
          "code"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:202`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:209`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:213`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:230`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:237`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:241`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:267`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:277`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:283`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### ol\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:290`  \n> **Type**: other  \n> **Description**: ol component\n\n**Props**:\n- `className` (string) = \"inline-flex items-center space-x-1 md:space-x-3\"\n\n\n#### li\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:291`  \n> **Type**: other  \n> **Description**: li component\n\n**Props**:\n- `className` (string) = \"inline-flex items-center\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:296`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-3 h-3 mr-2.5\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:297`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `d` (string) = \"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"\n\n\n#### li\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:302`  \n> **Type**: other  \n> **Description**: li component\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:304`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-gray-400\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:305`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `fillRule` (string) = \"evenodd\"\n- `d` (string) = \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n- `clipRule` (string) = \"evenodd\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:343`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-5 h-5 text-blue-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:344`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:371`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-5 h-5 text-green-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:372`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:387`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-5 h-5 text-blue-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:388`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:389`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:404`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-5 h-5 text-purple-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:405`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:426`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-green-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:427`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:514`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:515`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:533`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-violet-600\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:534`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:562`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:563`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:564`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n\n\n#### code\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:601`  \n> **Type**: other  \n> **Description**: code component\n\n**Props**:\n- `className` (string) = \"text-sm text-gray-100\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Return to Dashboard\"\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:248`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Return to Dashboard\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n#### button - \"Dashboard\"\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:292`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Dashboard\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"inline-flex items-center text-sm font-medium text-gray-700 hover:text-violet-600 dark:text-gray-400 dark:hover:text-white\"\n\n\n#### button\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:502`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `handleStartAudit`\n\n**Props**:\n- `onClick` (expression)\n- `disabled` (expression)\n- `className` (string) = \"w-full btn bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white flex items-center justify-center\"\n\n\n#### button\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:558`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"w-full btn bg-violet-600 hover:bg-violet-700 text-white flex items-center justify-center\"\n\n\n\n### 🧭 Navigation Components\n\n#### nav\n\n> **Location**: `src/app/website/[websiteId]/page.tsx:289`  \n> **Type**: navigation  \n> **Description**: Navigation component for site/app navigation\n\n**Props**:\n- `className` (string) = \"flex mb-4\"\n- `aria-label` (string) = \"Breadcrumb\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/meta-tags/[token]",
        "name": "[token]",
        "slug": "token",
        "purpose": "The [token] page provides user interface and functionality for [token] related features.",
        "components": [
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "Sidebar",
          "Header",
          "main",
          "a",
          "svg",
          "path",
          "header",
          "table",
          "thead",
          "tr",
          "th",
          "th",
          "th",
          "th",
          "th",
          "tbody",
          "tr",
          "td",
          "svg",
          "path",
          "tr",
          "td",
          "a",
          "td",
          "td",
          "td",
          "td",
          "button",
          "button"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### Sidebar\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:89`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:96`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:100`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow flex items-center justify-center\"\n\n\n#### svg\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:103`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:104`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:122`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:129`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:133`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow flex items-center justify-center\"\n\n\n#### svg\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:136`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:137`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:155`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:163`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:168`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:179`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:180`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 19l-7-7 7-7\"\n\n\n#### header\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:206`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n#### table\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:211`  \n> **Type**: other  \n> **Description**: table component\n\n**Props**:\n- `className` (string) = \"table-auto w-full dark:text-gray-300\"\n\n\n#### thead\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:212`  \n> **Type**: other  \n> **Description**: thead component\n\n**Props**:\n- `className` (string) = \"text-xs uppercase text-gray-400 dark:text-gray-500 bg-gray-50 dark:bg-gray-700 dark:bg-opacity-50 rounded-sm\"\n\n\n#### tr\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:213`  \n> **Type**: other  \n> **Description**: tr component\n\n\n#### th\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:214`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:217`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:220`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:223`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:226`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### tbody\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:231`  \n> **Type**: other  \n> **Description**: tbody component\n\n**Props**:\n- `className` (string) = \"text-sm font-medium divide-y divide-gray-100 dark:divide-gray-700/60\"\n\n\n#### tr\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:233`  \n> **Type**: other  \n> **Description**: tr component\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:234`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `colSpan` (expression)\n- `className` (string) = \"p-8 text-center\"\n\n\n#### svg\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:236`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-12 h-12 mx-auto mb-4 text-gray-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:237`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n\n\n#### tr\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:246`  \n> **Type**: other  \n> **Description**: tr component\n\n**Props**:\n- `key` (expression)\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:247`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:261`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:269`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:277`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:282`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Back to Dashboard\"\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:175`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Back to Dashboard\" that takes users to different pages\n\n**Navigates To**: [App](#app) (`/`)\n\n**Props**:\n- `href` (string) = \"/\"\n- `className` (string) = \"inline-flex items-center text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200 transition-colors mr-4\"\n\n\n#### a\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:249`  \n> **Type**: link  \n> **Description**: Navigation link that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Edit\"\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:284`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Edit\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300 text-sm\"\n\n\n#### button - \"Delete\"\n\n> **Location**: `src/app/meta-tags/[token]/page.tsx:287`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Delete\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 text-sm\"\n\n\n\n",
        "navigationLinks": [
          "[App](#app)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/alt-tags/[token]",
        "name": "[token]",
        "slug": "token",
        "purpose": "The [token] page provides user interface and functionality for [token] related features.",
        "components": [
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "Sidebar",
          "Header",
          "main",
          "svg",
          "path",
          "Sidebar",
          "Header",
          "main",
          "a",
          "svg",
          "path",
          "header",
          "table",
          "thead",
          "tr",
          "th",
          "th",
          "th",
          "th",
          "th",
          "tbody",
          "tr",
          "td",
          "svg",
          "path",
          "tr",
          "td",
          "Image",
          "td",
          "a",
          "td",
          "td",
          "td",
          "button",
          "button"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### Sidebar\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:89`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:96`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:100`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow flex items-center justify-center\"\n\n\n#### svg\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:103`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:104`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M13 10V3L4 14h7v7l9-11h-7z\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:122`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:129`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:133`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow flex items-center justify-center\"\n\n\n#### svg\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:136`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-8 h-8 text-white\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:137`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:155`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:163`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:168`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### svg\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:179`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 mr-2\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:180`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M15 19l-7-7 7-7\"\n\n\n#### header\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:206`  \n> **Type**: other  \n> **Description**: header component\n\n**Props**:\n- `className` (string) = \"px-5 py-4 border-b border-gray-100 dark:border-gray-700/60\"\n\n\n#### table\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:211`  \n> **Type**: other  \n> **Description**: table component\n\n**Props**:\n- `className` (string) = \"table-auto w-full dark:text-gray-300\"\n\n\n#### thead\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:212`  \n> **Type**: other  \n> **Description**: thead component\n\n**Props**:\n- `className` (string) = \"text-xs uppercase text-gray-400 dark:text-gray-500 bg-gray-50 dark:bg-gray-700 dark:bg-opacity-50 rounded-sm\"\n\n\n#### tr\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:213`  \n> **Type**: other  \n> **Description**: tr component\n\n\n#### th\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:214`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:217`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:220`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:223`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### th\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:226`  \n> **Type**: other  \n> **Description**: th component\n\n**Props**:\n- `className` (string) = \"p-2 text-left\"\n\n\n#### tbody\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:231`  \n> **Type**: other  \n> **Description**: tbody component\n\n**Props**:\n- `className` (string) = \"text-sm font-medium divide-y divide-gray-100 dark:divide-gray-700/60\"\n\n\n#### tr\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:233`  \n> **Type**: other  \n> **Description**: tr component\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:234`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `colSpan` (expression)\n- `className` (string) = \"p-8 text-center\"\n\n\n#### svg\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:236`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-12 h-12 mx-auto mb-4 text-gray-400\"\n- `fill` (string) = \"none\"\n- `stroke` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 24 24\"\n\n\n#### path\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:237`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `strokeLinecap` (string) = \"round\"\n- `strokeLinejoin` (string) = \"round\"\n- `strokeWidth` (expression)\n- `d` (string) = \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n\n\n#### tr\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:246`  \n> **Type**: other  \n> **Description**: tr component\n\n**Props**:\n- `key` (expression)\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:247`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### Image\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:249`  \n> **Type**: other  \n> **Description**: Image component\n\n**Props**:\n- `src` (expression)\n- `alt` (expression)\n- `width` (expression)\n- `height` (expression)\n- `className` (string) = \"w-full h-full object-cover\"\n- `onError` (expression)\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:262`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:276`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:281`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n#### td\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:286`  \n> **Type**: other  \n> **Description**: td component\n\n**Props**:\n- `className` (string) = \"p-2\"\n\n\n\n### 🔗 Navigation Links\n\n#### a - \"Back to Dashboard\"\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:175`  \n> **Type**: link  \n> **Description**: Navigation link labeled \"Back to Dashboard\" that takes users to different pages\n\n**Navigates To**: [App](#app) (`/`)\n\n**Props**:\n- `href` (string) = \"/\"\n- `className` (string) = \"inline-flex items-center text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200 transition-colors mr-4\"\n\n\n#### a\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:264`  \n> **Type**: link  \n> **Description**: Navigation link that takes users to different pages\n\n**Props**:\n- `href` (expression)\n- `target` (string) = \"_blank\"\n- `rel` (string) = \"noopener noreferrer\"\n- `className` (string) = \"text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300\"\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Edit\"\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:288`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Edit\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300 text-sm\"\n\n\n#### button - \"Delete\"\n\n> **Location**: `src/app/alt-tags/[token]/page.tsx:291`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Delete\" that triggers user actions\n\n**Props**:\n- `className` (string) = \"text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 text-sm\"\n\n\n\n",
        "navigationLinks": [
          "[App](#app)"
        ],
        "dataFlow": "Data flows through React props and state management"
      },
      {
        "route": "/website/[websiteId]/cms-connection",
        "name": "Cms Connection",
        "slug": "cms-connection",
        "purpose": "The Cms Connection page provides user interface and functionality for cms connection related features.",
        "components": [
          "Sidebar",
          "Header",
          "main",
          "Sidebar",
          "Header",
          "main",
          "button",
          "Sidebar",
          "Header",
          "main",
          "nav",
          "ol",
          "li",
          "button",
          "li",
          "svg",
          "path",
          "button",
          "li",
          "svg",
          "path",
          "svg",
          "path",
          "svg",
          "path",
          "button",
          "OneClickCMSConnection"
        ],
        "componentsMarkdown": "### 🔧 Other Components\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:142`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:149`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:153`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:170`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:177`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:181`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### Sidebar\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:204`  \n> **Type**: other  \n> **Description**: Sidebar component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n- `sidebarExpanded` (expression)\n- `setSidebarExpanded` (expression)\n\n\n#### Header\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:214`  \n> **Type**: other  \n> **Description**: Header component\n\n**Props**:\n- `sidebarOpen` (expression)\n- `setSidebarOpen` (expression)\n\n\n#### main\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:220`  \n> **Type**: other  \n> **Description**: main component\n\n**Props**:\n- `className` (string) = \"grow\"\n\n\n#### ol\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:227`  \n> **Type**: other  \n> **Description**: ol component\n\n**Props**:\n- `className` (string) = \"inline-flex items-center space-x-1 md:space-x-3\"\n\n\n#### li\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:228`  \n> **Type**: other  \n> **Description**: li component\n\n**Props**:\n- `className` (string) = \"inline-flex items-center\"\n\n\n#### li\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:236`  \n> **Type**: other  \n> **Description**: li component\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:238`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-gray-400\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:239`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `fillRule` (string) = \"evenodd\"\n- `d` (string) = \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n- `clipRule` (string) = \"evenodd\"\n\n\n#### li\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:249`  \n> **Type**: other  \n> **Description**: li component\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:251`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-6 h-6 text-gray-400\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:252`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `fillRule` (string) = \"evenodd\"\n- `d` (string) = \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n- `clipRule` (string) = \"evenodd\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:274`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"h-5 w-5 text-red-400\"\n- `viewBox` (string) = \"0 0 20 20\"\n- `fill` (string) = \"currentColor\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:275`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `fillRule` (string) = \"evenodd\"\n- `d` (string) = \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n- `clipRule` (string) = \"evenodd\"\n\n\n#### svg\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:301`  \n> **Type**: other  \n> **Description**: svg component\n\n**Props**:\n- `className` (string) = \"w-4 h-4 text-violet-600\"\n- `fill` (string) = \"currentColor\"\n- `viewBox` (string) = \"0 0 20 20\"\n\n\n#### path\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:302`  \n> **Type**: other  \n> **Description**: path component\n\n**Props**:\n- `d` (string) = \"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"\n\n\n#### OneClickCMSConnection\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:354`  \n> **Type**: other  \n> **Description**: OneClickCMSConnection component\n\n**Props**:\n- `onConnectionComplete` (expression)\n\n\n\n### 🔘 Buttons & Actions\n\n#### button - \"Return to Dashboard\"\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:185`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Return to Dashboard\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"btn bg-violet-600 hover:bg-violet-700 text-white\"\n\n\n#### button - \"Dashboard\"\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:229`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Dashboard\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"inline-flex items-center text-sm font-medium text-gray-700 hover:text-violet-600 dark:text-gray-400 dark:hover:text-white\"\n\n\n#### button\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:241`  \n> **Type**: button  \n> **Description**: Interactive button that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"ml-1 text-sm font-medium text-gray-700 hover:text-violet-600 dark:text-gray-400 dark:hover:text-white md:ml-2\"\n\n\n#### button - \"Disconnect\"\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:329`  \n> **Type**: button  \n> **Description**: Interactive button labeled \"Disconnect\" that triggers user actions\n\n**Click Handler**: `inline-function`\n\n**Props**:\n- `onClick` (expression)\n- `className` (string) = \"text-sm text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\"\n\n\n\n### 🧭 Navigation Components\n\n#### nav\n\n> **Location**: `src/app/website/[websiteId]/cms-connection/page.tsx:226`  \n> **Type**: navigation  \n> **Description**: Navigation component for site/app navigation\n\n**Props**:\n- `className` (string) = \"flex mb-4\"\n- `aria-label` (string) = \"Breadcrumb\"\n\n\n\n",
        "navigationLinks": [],
        "dataFlow": "Data flows through React props and state management"
      }
    ],
    "styling": "CSS",
    "stateManagement": "React State (useState, useContext)"
  },
  "backend": {
    "overview": "# Backend API Documentation\n\nThis documentation provides a comprehensive overview of the backend API, including routes, functions, and their interactions with the database. It is structured to assist developers in understanding and utilizing the codebase effectively.\n\n---\n\n## Table of Contents\n\n- [Strapi Publishing Debug & Fix](#strapi-publishing-debug--fix)\n- [Admin Tool API](#admin-tool-api)\n- [Supabase Server Client](#supabase-server-client)\n- [GSC Connection Component](#gsc-connection-component)\n- [API Service](#api-service)\n- [UI Component → API Mapping](#ui-component--api-mapping)\n\n---\n\n## Strapi Publishing Debug & Fix\n\n### Issues Identified & Fixed ✅\n\n#### 1. CMS Manager Database Schema Mismatch\n- **Problem**: Mismatch between the CMS Manager's modern schema and the legacy database schema.\n- **Error**: `400 Bad Request` when querying the `cms_connections` table.\n- **Fixed**: Updated `/src/lib/cms/cms-manager.ts` to use correct column names:\n  - `user_id` → `user_token`\n  - `is_active` → `status = 'active'`\n  - Updated `dbRecordToConnection()` to map legacy schema properly.\n\n#### 2. Created Supabase Edge Function\n- **File**: `/supabase/functions/publish-article/index.ts`\n- **Purpose**: Replace Vercel Edge Functions with Supabase Edge Functions.\n- **Features**:\n  - Same publishing logic as current API.\n  - Improved Strapi content type parsing.\n  - Better error handling and logging.\n  - CORS support for frontend calls.\n\n### Current Strapi Publishing Error Analysis\n- **Error Message**: \n  ```\n  \"Method not allowed for endpoint: api::blog-post.blog-post\"\n  ```\n\n---\n\n## Admin Tool API\n\n### Routes\n- **GET** `/api/health`\n- **GET** `/api/websites`\n- **GET** `/api/websites/:token`\n- **POST** `/api/test-endpoints/:token`\n- **POST** `/api/websites`\n- **GET** `/api/users`\n- **GET** `/api/env`\n- **GET** `/`\n\n### Example Code\n```javascript\napp.get('/api/health', (req, res) => {\n  res.json({ status: 'ok', timestamp: new Date().toISOString() });\n});\n```\n\n### Purpose\nProvides health check and management functionalities for websites and users.\n\n### Error Handling\n- Standard HTTP error codes (e.g., `404 Not Found`, `500 Internal Server Error`).\n\n---\n\n## Supabase Server Client\n\n### File\n- **Path**: `/src/lib/supabase-server.ts`\n\n### Example Code\n```typescript\nexport const createServerSupabaseClient = () => {\n  const cookieStore = cookies();\n  \n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: any) {\n          cookieStore.set({ name, value, ...options });\n        },\n        remove(name: string, options: any) {\n          cookieStore.set({ name, value: '', ...options });\n        },\n      },\n    }\n  );\n};\n```\n\n### Purpose\nCreates a Supabase client for server-side operations, managing cookies for authentication.\n\n---\n\n## GSC Connection Component\n\n### Routes\n- **GET** `gsc_connected`\n- **GET** `error`\n- **GET** `details`\n\n### Example Code\n```javascript\nexport default function GSCConnection({ onConnectionChange }: GSCConnectionProps) {\n  const { user } = useAuth();\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>({ connected: false });\n  // Additional state management...\n}\n```\n\n### Purpose\nHandles the connection status and properties for Google Search Console (GSC).\n\n### Parameters\n- **GSCConnectionProps**: Optional callback for connection changes.\n\n### Response\n- Connection status and properties related to GSC.\n\n---\n\n## API Service\n\n### Routes\n- **GET** `/`\n\n### Example Code\n```javascript\nconst app = express();\napp.use(helmet());\napp.use(cors());\n```\n\n### Purpose\nMain entry point for the API service, setting up middleware and routes.\n\n### Error Handling\n- Utilizes custom error handling middleware.\n\n---\n\n## UI Component → API Mapping\n\n| **Slug**          | **Service Function**          | **Linked Components** | **Purpose**                                   | **Parameters**                     | **Response**                               | **Error Handling**                      | **Database Operations**              |\n|-------------------|-------------------------------|-----------------------|-----------------------------------------------|------------------------------------|--------------------------------------------|----------------------------------------|--------------------------------------|\n| `get-health`      | `app.get('/api/health')`     | N/A                   | Check API health status                      | None                               | `{ status: 'ok', timestamp: '...' }`     | `500 Internal Server Error`            | None                                 |\n| `get-websites`    | `app.get('/api/websites')`   | N/A                   | Retrieve all websites                        | None                               | Array of website objects                   | `404 Not Found`, `500 Internal Server Error` | Fetches from `websites` table       |\n| `post-websites`   | `app.post('/api/websites')`   | N/A                   | Create a new website                         | Website data in request body       | Created website object                     | `400 Bad Request`, `500 Internal Server Error` | Inserts into `websites` table       |\n| `gsc-connection`  | `GSCConnection`               | GSCConnection         | Manage GSC connection status                 | Connection parameters               | Connection status and properties           | `401 Unauthorized`, `500 Internal Server Error` | None                                 |\n\n---\n\nThis documentation serves as a guide for developers to understand the backend API's structure, functionalities, and how to interact with it effectively. For further assistance, please refer to the specific sections or contact the development team.",
    "apis": [
      {
        "method": "GET",
        "path": "/api/health",
        "slug": "get-api-health",
        "purpose": "GET endpoint for /api/health",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/api/websites",
        "slug": "get-api-websites",
        "purpose": "GET endpoint for /api/websites",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/api/websites/:token",
        "slug": "get-api-websites-token",
        "purpose": "GET endpoint for /api/websites/:token",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/api/test-endpoints/:token",
        "slug": "post-api-test-endpoints-token",
        "purpose": "POST endpoint for /api/test-endpoints/:token",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/api/websites",
        "slug": "post-api-websites",
        "purpose": "POST endpoint for /api/websites",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/api/users",
        "slug": "get-api-users",
        "purpose": "GET endpoint for /api/users",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/api/env",
        "slug": "get-api-env",
        "purpose": "GET endpoint for /api/env",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/",
        "slug": "get",
        "purpose": "GET endpoint for /",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "admin-tool/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "gsc_connected",
        "slug": "get-gsc-connected",
        "purpose": "GET endpoint for gsc_connected",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/components/GSCConnection.tsx",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "error",
        "slug": "get-error",
        "purpose": "GET endpoint for error",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/components/GSCConnection.tsx",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "details",
        "slug": "get-details",
        "purpose": "GET endpoint for details",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/components/GSCConnection.tsx",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/",
        "slug": "get",
        "purpose": "GET endpoint for /",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/server.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/publish-article/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/publish-article/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "token",
        "slug": "get-token",
        "purpose": "GET endpoint for token",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/websites/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/websites/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "Authorization",
        "slug": "get-authorization",
        "purpose": "GET endpoint for Authorization",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/websites/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-alt-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-alt-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "token",
        "slug": "get-token",
        "purpose": "GET endpoint for token",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/get-alt-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "OPENAI_API_KEY",
        "slug": "get-openai-api-key",
        "purpose": "GET endpoint for OPENAI_API_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-meta-tags/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-image-alt/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-image-alt/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "OPENAI_API_KEY",
        "slug": "get-openai-api-key",
        "purpose": "GET endpoint for OPENAI_API_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-image-alt/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "OPENAI_API_KEY",
        "slug": "get-openai-api-key",
        "purpose": "GET endpoint for OPENAI_API_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-image-alt/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "OPENAI_API_KEY",
        "slug": "get-openai-api-key",
        "purpose": "GET endpoint for OPENAI_API_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-article/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_URL",
        "slug": "get-supabase-url",
        "purpose": "GET endpoint for SUPABASE_URL",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-article/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "SUPABASE_SERVICE_ROLE_KEY",
        "slug": "get-supabase-service-role-key",
        "purpose": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "supabase/functions/generate-article/index.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "content-type",
        "slug": "get-content-type",
        "purpose": "GET endpoint for content-type",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/lib/cms/base-provider.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "mode",
        "slug": "get-mode",
        "purpose": "GET endpoint for mode",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/login/page.tsx",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/manage",
        "slug": "get-manage",
        "purpose": "GET endpoint for /manage",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/subscriptions.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/manage",
        "slug": "post-manage",
        "purpose": "POST endpoint for /manage",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/subscriptions.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/create-checkout-session",
        "slug": "post-create-checkout-session",
        "purpose": "POST endpoint for /create-checkout-session",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/subscriptions.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/webhook",
        "slug": "post-webhook",
        "purpose": "POST endpoint for /webhook",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/subscriptions.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/usage",
        "slug": "get-usage",
        "purpose": "GET endpoint for /usage",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/subscriptions.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/websites",
        "slug": "get-websites",
        "purpose": "GET endpoint for /websites",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/seo.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/websites",
        "slug": "post-websites",
        "purpose": "POST endpoint for /websites",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/seo.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/audit/:websiteId",
        "slug": "get-audit-websiteid",
        "purpose": "GET endpoint for /audit/:websiteId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/seo.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/crawl/:websiteId",
        "slug": "get-crawl-websiteid",
        "purpose": "GET endpoint for /crawl/:websiteId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/seo.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/issues/:websiteId",
        "slug": "get-issues-websiteid",
        "purpose": "GET endpoint for /issues/:websiteId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/seo.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/",
        "slug": "get",
        "purpose": "GET endpoint for /",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/health.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/detailed",
        "slug": "get-detailed",
        "purpose": "GET endpoint for /detailed",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/health.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/ready",
        "slug": "get-ready",
        "purpose": "GET endpoint for /ready",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/health.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/alive",
        "slug": "get-alive",
        "purpose": "GET endpoint for /alive",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/health.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/connection",
        "slug": "get-connection",
        "purpose": "GET endpoint for /connection",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/oauth/start",
        "slug": "get-oauth-start",
        "purpose": "GET endpoint for /oauth/start",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/oauth/callback",
        "slug": "get-oauth-callback",
        "purpose": "GET endpoint for /oauth/callback",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/oauth/refresh",
        "slug": "post-oauth-refresh",
        "purpose": "POST endpoint for /oauth/refresh",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/properties",
        "slug": "get-properties",
        "purpose": "GET endpoint for /properties",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/sync",
        "slug": "post-sync",
        "purpose": "POST endpoint for /sync",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/performance",
        "slug": "get-performance",
        "purpose": "GET endpoint for /performance",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/gsc.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/connections",
        "slug": "get-connections",
        "purpose": "GET endpoint for /connections",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/connections",
        "slug": "post-connections",
        "purpose": "POST endpoint for /connections",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/connections/:id",
        "slug": "get-connections-id",
        "purpose": "GET endpoint for /connections/:id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "DELETE",
        "path": "/connections/:id",
        "slug": "delete-connections-id",
        "purpose": "DELETE endpoint for /connections/:id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/oauth/start",
        "slug": "get-oauth-start",
        "purpose": "GET endpoint for /oauth/start",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/oauth/callback/:type",
        "slug": "get-oauth-callback-type",
        "purpose": "GET endpoint for /oauth/callback/:type",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/test-connection",
        "slug": "post-test-connection",
        "purpose": "POST endpoint for /test-connection",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/cms.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/login",
        "slug": "post-login",
        "purpose": "POST endpoint for /login",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/auth.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/register",
        "slug": "post-register",
        "purpose": "POST endpoint for /register",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/auth.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/refresh",
        "slug": "post-refresh",
        "purpose": "POST endpoint for /refresh",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/auth.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/me",
        "slug": "get-me",
        "purpose": "GET endpoint for /me",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/auth.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/",
        "slug": "get",
        "purpose": "GET endpoint for /",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/generate",
        "slug": "post-generate",
        "purpose": "POST endpoint for /generate",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "POST",
        "path": "/publish",
        "slug": "post-publish",
        "purpose": "POST endpoint for /publish",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "/:id",
        "slug": "get-id",
        "purpose": "GET endpoint for /:id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "PUT",
        "path": "/:id",
        "slug": "put-id",
        "purpose": "PUT endpoint for /:id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "DELETE",
        "path": "/:id",
        "slug": "delete-id",
        "purpose": "DELETE endpoint for /:id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/routes/articles.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "User-Agent",
        "slug": "get-user-agent",
        "purpose": "GET endpoint for User-Agent",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/middleware/logger.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "User-Agent",
        "slug": "get-user-agent",
        "purpose": "GET endpoint for User-Agent",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "api-service/src/middleware/errorHandler.js",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "site_url",
        "slug": "get-site-url",
        "purpose": "GET endpoint for site_url",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/lib/cms/providers/wordpress.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "user_login",
        "slug": "get-user-login",
        "purpose": "GET endpoint for user_login",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/lib/cms/providers/wordpress.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "password",
        "slug": "get-password",
        "purpose": "GET endpoint for password",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/lib/cms/providers/wordpress.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "shop",
        "slug": "get-shop",
        "purpose": "GET endpoint for shop",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/lib/cms/providers/shopify.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/websites/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/websites/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/websites/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "websiteId",
        "slug": "get-websiteid",
        "purpose": "GET endpoint for websiteId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/websites/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "websiteUrl",
        "slug": "get-websiteurl",
        "purpose": "GET endpoint for websiteUrl",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "status",
        "slug": "get-status",
        "purpose": "GET endpoint for status",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "limit",
        "slug": "get-limit",
        "purpose": "GET endpoint for limit",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "offset",
        "slug": "get-offset",
        "purpose": "GET endpoint for offset",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/articles/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "stripe-signature",
        "slug": "get-stripe-signature",
        "purpose": "GET endpoint for stripe-signature",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/subscription/webhook/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/subscription/manage/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/properties/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/connection/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/connection/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "authorization",
        "slug": "get-authorization",
        "purpose": "GET endpoint for authorization",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cron/gsc-sync/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/connections/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/connections/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "connectionId",
        "slug": "get-connectionid",
        "purpose": "GET endpoint for connectionId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/connections/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/chat/threads/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "siteId",
        "slug": "get-siteid",
        "purpose": "GET endpoint for siteId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/chat/threads/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/chat/sites/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/chat/messages/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "threadId",
        "slug": "get-threadid",
        "purpose": "GET endpoint for threadId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/chat/messages/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "authUserId",
        "slug": "get-authuserid",
        "purpose": "GET endpoint for authUserId",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/auth/get-token/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/start/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/[auditId]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/[auditId]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/audits/[auditId]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/debug/tables/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/debug/gsc-test/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/oauth/start/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "userToken",
        "slug": "get-usertoken",
        "purpose": "GET endpoint for userToken",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/oauth/refresh/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "code",
        "slug": "get-code",
        "purpose": "GET endpoint for code",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/oauth/callback/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "state",
        "slug": "get-state",
        "purpose": "GET endpoint for state",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/oauth/callback/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "error",
        "slug": "get-error",
        "purpose": "GET endpoint for error",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/gsc/oauth/callback/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "origin",
        "slug": "get-origin",
        "purpose": "GET endpoint for origin",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/start/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "code",
        "slug": "get-code",
        "purpose": "GET endpoint for code",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "state",
        "slug": "get-state",
        "purpose": "GET endpoint for state",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "error",
        "slug": "get-error",
        "purpose": "GET endpoint for error",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "user_id",
        "slug": "get-user-id",
        "purpose": "GET endpoint for user_id",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "site_url",
        "slug": "get-site-url",
        "purpose": "GET endpoint for site_url",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "user_login",
        "slug": "get-user-login",
        "purpose": "GET endpoint for user_login",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      },
      {
        "method": "GET",
        "path": "password",
        "slug": "get-password",
        "purpose": "GET endpoint for password",
        "parameters": [],
        "response": "JSON response",
        "errorHandling": "Standard HTTP error codes",
        "filePath": "src/app/api/cms/oauth/callback/[type]/route.ts",
        "serviceFunction": "handler"
      }
    ],
    "services": [],
    "middleware": [],
    "authentication": "Custom"
  },
  "database": {
    "overview": "# Database Documentation\n\nThis documentation provides a comprehensive overview of the database architecture, schema, query patterns, data models, and performance considerations for the project utilizing Supabase as the database solution.\n\n## 1. Database Architecture\n\n### Type\nThe project uses **Supabase**, an open-source backend-as-a-service (BaaS) that provides a PostgreSQL database, authentication, real-time subscriptions, and storage.\n\n### Hosting\nSupabase is hosted on the Supabase cloud infrastructure, which offers scalability and reliability. The database is managed by Supabase, ensuring automatic backups and updates.\n\n### Connection Details\nTo connect to the Supabase database, the following details are required:\n- **URL**: The Supabase project URL, typically in the format `https://<project-ref>.supabase.co`\n- **API Key**: A secret API key that grants access to the database.\n- **Database URL**: The PostgreSQL connection string, which includes the database name, user, password, and host.\n\n### Dependencies\nThe project relies on the following npm packages:\n- `@supabase/ssr`: For server-side rendering with Supabase.\n- `@supabase/supabase-js`: The official JavaScript client library for interacting with Supabase.\n\n## 2. Schema Overview\n\nThe database schema consists of multiple tables that represent different entities in the application. Below is a high-level overview of the tables and their relationships.\n\n### Tables\n- **Users**: Stores user information and authentication details.\n- **Posts**: Contains blog posts or articles created by users.\n- **Comments**: Stores comments made by users on posts.\n- **Categories**: Represents categories for organizing posts.\n- **Tags**: Allows tagging of posts for better searchability.\n\n### Relationships\n- **Users to Posts**: One-to-Many (A user can create multiple posts).\n- **Posts to Comments**: One-to-Many (A post can have multiple comments).\n- **Posts to Categories**: Many-to-One (A post belongs to one category).\n- **Posts to Tags**: Many-to-Many (A post can have multiple tags, and a tag can belong to multiple posts).\n\n## 3. Query Patterns\n\nThe database is accessed and modified through various query patterns, primarily using the Supabase client library. Below are examples of common query patterns:\n\n### Data Retrieval\n- **Fetching All Posts**:\n  ```javascript\n  const { data, error } = await supabase\n    .from('posts')\n    .select('*');\n  ```\n\n- **Fetching Posts by Category**:\n  ```javascript\n  const { data, error } = await supabase\n    .from('posts')\n    .select('*')\n    .eq('category_id', categoryId);\n  ```\n\n### Data Insertion\n- **Inserting a New Post**:\n  ```javascript\n  const { data, error } = await supabase\n    .from('posts')\n    .insert([\n      { title: 'New Post', content: 'Post content', user_id: userId, category_id: categoryId }\n    ]);\n  ```\n\n### Data Update\n- **Updating a Post**:\n  ```javascript\n  const { data, error } = await supabase\n    .from('posts')\n    .update({ title: 'Updated Title' })\n    .eq('id', postId);\n  ```\n\n### Data Deletion\n- **Deleting a Comment**:\n  ```javascript\n  const { data, error } = await supabase\n    .from('comments')\n    .delete()\n    .eq('id', commentId);\n  ```\n\n## 4. Data Models\n\n### Users Table\n- **id**: UUID (Primary Key)\n- **email**: String (Unique, Required)\n- **password**: String (Required)\n- **created_at**: Timestamp (Default: now())\n\n### Posts Table\n- **id**: UUID (Primary Key)\n- **title**: String (Required)\n- **content**: Text (Required)\n- **user_id**: UUID (Foreign Key referencing Users)\n- **category_id**: UUID (Foreign Key referencing Categories)\n- **created_at**: Timestamp (Default: now())\n\n### Comments Table\n- **id**: UUID (Primary Key)\n- **post_id**: UUID (Foreign Key referencing Posts)\n- **user_id**: UUID (Foreign Key referencing Users)\n- **content**: Text (Required)\n- **created_at**: Timestamp (Default: now())\n\n### Categories Table\n- **id**: UUID (Primary Key)\n- **name**: String (Unique, Required)\n\n### Tags Table\n- **id**: UUID (Primary Key)\n- **name**: String (Unique, Required)\n\n### PostTags Table (Join Table for Many-to-Many Relationship)\n- **post_id**: UUID (Foreign Key referencing Posts)\n- **tag_id**: UUID (Foreign Key referencing Tags)\n\n## 5. Performance Considerations\n\n### Indexing\nTo optimize query performance, the following indexes should be considered:\n- Index on `user_id` in the Posts table to speed up queries filtering by user.\n- Index on `category_id` in the Posts table to enhance performance for category-based queries.\n- Composite index on `post_id` and `user_id` in the Comments table for efficient retrieval of comments.\n\n### Optimization\n- **Batch Inserts**: Use batch inserts for adding multiple records at once to reduce the number of transactions.\n- **Pagination**: Implement pagination in queries that return large datasets to improve load times and user experience.\n- **Caching**: Utilize caching strategies for frequently accessed data to reduce database load.\n\nThis documentation serves as a guide for developers to understand and work with the Supabase database in this project effectively. It is recommended to keep this documentation updated as the database schema evolves.",
    "schema": [],
    "queries": [],
    "relationships": "Database relationships to be documented"
  },
  "userFlows": [
    {
      "name": "Landing Page",
      "slug": "landing-page",
      "description": "Main entry point where users first visit the website to learn about the product/service",
      "steps": [
        {
          "action": "Create Account Button",
          "component": "Landing Page",
          "componentSlug": "landing-page",
          "event": "onClick",
          "apiEndpoint": "POST /api/auth/register",
          "apiSlug": "create-account-function",
          "serviceFunction": "createAccount",
          "dbModel": "users",
          "result": "Navigate to signup-page"
        },
        {
          "action": "Login Button",
          "component": "Landing Page",
          "componentSlug": "landing-page",
          "event": "onClick",
          "apiEndpoint": "POST /api/auth/login",
          "apiSlug": "authenticate-user-function",
          "serviceFunction": "authenticateUser",
          "dbModel": "users",
          "result": "Navigate to dashboard"
        }
      ]
    },
    {
      "name": "Dashboard",
      "slug": "dashboard",
      "description": "Main user interface after login where users manage their account and access features",
      "steps": [
        {
          "action": "Profile Settings",
          "component": "Dashboard",
          "componentSlug": "dashboard",
          "event": "onClick",
          "apiEndpoint": "",
          "apiSlug": "",
          "serviceFunction": "",
          "dbModel": "",
          "result": "Navigate to profile-settings"
        },
        {
          "action": "Manage Websites",
          "component": "Dashboard",
          "componentSlug": "dashboard",
          "event": "onClick",
          "apiEndpoint": "",
          "apiSlug": "",
          "serviceFunction": "",
          "dbModel": "",
          "result": "Navigate to website-management"
        }
      ]
    },
    {
      "name": "Login Page",
      "slug": "login-page",
      "description": "Page for users to enter their credentials and log into their account",
      "steps": [
        {
          "action": "Submit Login Form",
          "component": "Login Page",
          "componentSlug": "login-page",
          "event": "onSubmit",
          "apiEndpoint": "POST /api/auth/login",
          "apiSlug": "authenticate-user-function",
          "serviceFunction": "authenticateUser",
          "dbModel": "users",
          "result": "Navigate to dashboard"
        }
      ]
    },
    {
      "name": "Website Management Page",
      "slug": "website-management",
      "description": "Page where users can manage their connected websites",
      "steps": [
        {
          "action": "Add Website Button",
          "component": "Website Management Page",
          "componentSlug": "website-management",
          "event": "onClick",
          "apiEndpoint": "POST /api/websites",
          "apiSlug": "add-website-function",
          "serviceFunction": "addWebsite",
          "dbModel": "websites",
          "result": "Navigate to add-website-page"
        },
        {
          "action": "Edit Website Button",
          "component": "Website Management Page",
          "componentSlug": "website-management",
          "event": "onClick",
          "apiEndpoint": "PUT /api/websites/:token",
          "apiSlug": "update-website-function",
          "serviceFunction": "updateWebsite",
          "dbModel": "websites",
          "result": "Navigate to edit-website-page"
        }
      ]
    },
    {
      "name": "Terms Page",
      "slug": "terms-page",
      "description": "Page displaying the terms and conditions of using the application",
      "steps": [
        {
          "action": "Accept Terms Button",
          "component": "Terms Page",
          "componentSlug": "terms-page",
          "event": "onClick",
          "apiEndpoint": "POST /api/users/accept-terms",
          "apiSlug": "accept-terms-function",
          "serviceFunction": "acceptTerms",
          "dbModel": "users",
          "result": "Navigate to dashboard"
        }
      ]
    },
    {
      "name": "Privacy Page",
      "slug": "privacy-page",
      "description": "Page displaying the privacy policy of the application",
      "steps": []
    },
    {
      "name": "Debug SEO Page",
      "slug": "debug-seo-page",
      "description": "Page for debugging SEO-related issues for the user's websites",
      "steps": [
        {
          "action": "Run Debug Tool",
          "component": "Debug SEO Page",
          "componentSlug": "debug-seo-page",
          "event": "onClick",
          "apiEndpoint": "POST /api/test-endpoints/:token",
          "apiSlug": "run-debug-seo-function",
          "serviceFunction": "runDebugSeo",
          "dbModel": "websites",
          "result": "Navigate to debug-results-page"
        }
      ]
    }
  ],
  "architectureDiagram": "\ngraph TB\n    %% Frontend Layer\n    subgraph \"Frontend Layer\"\n        FE0[\"AuthProvider\"]\n        FE1[\"WebsiteManagement\"]\n        FE2[\"UsageDashboard\"]\n        FE3[\"UpgradeBadge\"]\n        FE4[\"ThemeToggle\"]\n        FE5[\"SubscriptionManager\"]\n        FE6[\"SocialProof\"]\n        FE7[\"SnippetModal\"]\n    end\n    \n    %% Backend Layer\n    subgraph \"Backend Layer\"\n        BE0[\"server\"]\n        BE1[\"GSCConnection\"]\n        BE2[\"index\"]\n        BE3[\"base-provider\"]\n        BE4[\"page\"]\n        BE5[\"subscriptions\"]\n    end\n    \n    %% Database Layer\n    subgraph \"Database Layer\"\n        DB0[\"Supabase\"]\n    end\n    \n    %% External Services\n    subgraph \"External Services\"\n        EXT0[\"@supabase/ssr\"]\n        EXT1[\"@supabase/supabase-js\"]\n        EXT2[\"stripe\"]\n    end\n    \n    %% Connections\n    FE0 --> BE0\n    FE1 --> BE1\n    FE2 --> BE2\n    FE3 --> BE3\n    FE4 --> BE4\n    FE5 --> BE5\n    FE6 --> BE0\n    FE7 --> BE1\n    BE0 --> DB0\n    BE1 --> DB0\n    BE2 --> DB0\n    BE3 --> DB0\n    BE4 --> DB0\n    BE5 --> DB0\n    BE0 --> EXT0\n    BE0 --> EXT1\n    BE0 --> EXT2\n    BE1 --> EXT0\n    BE1 --> EXT1\n    BE1 --> EXT2\n    BE2 --> EXT0\n    BE2 --> EXT1\n    BE2 --> EXT2\n    \n    %% Styling\n    classDef frontend fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n    classDef backend fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n    classDef database fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n    classDef external fill:#fff3e0,stroke:#e65100,stroke-width:2px\n    \n    class FE0 frontend\n    class FE1 frontend\n    class FE2 frontend\n    class FE3 frontend\n    class FE4 frontend\n    class FE5 frontend\n    class FE6 frontend\n    class FE7 frontend\n    class BE0 backend\n    class BE1 backend\n    class BE2 backend\n    class BE3 backend\n    class BE4 backend\n    class BE5 backend\n    class DB0 database\n    class EXT0 external\n    class EXT1 external\n    class EXT2 external\n",
  "apiDocumentation": [
    {
      "endpoint": "/api/health",
      "method": "GET",
      "description": "GET endpoint for /api/health",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /api/health",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/websites",
      "method": "GET",
      "description": "GET endpoint for /api/websites",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /api/websites",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/websites/:token",
      "method": "GET",
      "description": "GET endpoint for /api/websites/:token",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /api/websites/:token",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/test-endpoints/:token",
      "method": "POST",
      "description": "POST endpoint for /api/test-endpoints/:token",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /api/test-endpoints/:token",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/websites",
      "method": "POST",
      "description": "POST endpoint for /api/websites",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /api/websites",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/users",
      "method": "GET",
      "description": "GET endpoint for /api/users",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /api/users",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/api/env",
      "method": "GET",
      "description": "GET endpoint for /api/env",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /api/env",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/",
      "method": "GET",
      "description": "GET endpoint for /",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "gsc_connected",
      "method": "GET",
      "description": "GET endpoint for gsc_connected",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET gsc_connected",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "error",
      "method": "GET",
      "description": "GET endpoint for error",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET error",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "details",
      "method": "GET",
      "description": "GET endpoint for details",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET details",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/",
      "method": "GET",
      "description": "GET endpoint for /",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "token",
      "method": "GET",
      "description": "GET endpoint for token",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET token",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "Authorization",
      "method": "GET",
      "description": "GET endpoint for Authorization",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET Authorization",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "token",
      "method": "GET",
      "description": "GET endpoint for token",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET token",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "OPENAI_API_KEY",
      "method": "GET",
      "description": "GET endpoint for OPENAI_API_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET OPENAI_API_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "OPENAI_API_KEY",
      "method": "GET",
      "description": "GET endpoint for OPENAI_API_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET OPENAI_API_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "OPENAI_API_KEY",
      "method": "GET",
      "description": "GET endpoint for OPENAI_API_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET OPENAI_API_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "OPENAI_API_KEY",
      "method": "GET",
      "description": "GET endpoint for OPENAI_API_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET OPENAI_API_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_URL",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_URL",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_URL",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "SUPABASE_SERVICE_ROLE_KEY",
      "method": "GET",
      "description": "GET endpoint for SUPABASE_SERVICE_ROLE_KEY",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET SUPABASE_SERVICE_ROLE_KEY",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "content-type",
      "method": "GET",
      "description": "GET endpoint for content-type",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET content-type",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "mode",
      "method": "GET",
      "description": "GET endpoint for mode",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET mode",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/manage",
      "method": "GET",
      "description": "GET endpoint for /manage",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /manage",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/manage",
      "method": "POST",
      "description": "POST endpoint for /manage",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /manage",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/create-checkout-session",
      "method": "POST",
      "description": "POST endpoint for /create-checkout-session",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /create-checkout-session",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/webhook",
      "method": "POST",
      "description": "POST endpoint for /webhook",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /webhook",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/usage",
      "method": "GET",
      "description": "GET endpoint for /usage",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /usage",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/websites",
      "method": "GET",
      "description": "GET endpoint for /websites",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /websites",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/websites",
      "method": "POST",
      "description": "POST endpoint for /websites",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /websites",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/audit/:websiteId",
      "method": "GET",
      "description": "GET endpoint for /audit/:websiteId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /audit/:websiteId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/crawl/:websiteId",
      "method": "GET",
      "description": "GET endpoint for /crawl/:websiteId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /crawl/:websiteId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/issues/:websiteId",
      "method": "GET",
      "description": "GET endpoint for /issues/:websiteId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /issues/:websiteId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/",
      "method": "GET",
      "description": "GET endpoint for /",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/detailed",
      "method": "GET",
      "description": "GET endpoint for /detailed",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /detailed",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/ready",
      "method": "GET",
      "description": "GET endpoint for /ready",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /ready",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/alive",
      "method": "GET",
      "description": "GET endpoint for /alive",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /alive",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/connection",
      "method": "GET",
      "description": "GET endpoint for /connection",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /connection",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/oauth/start",
      "method": "GET",
      "description": "GET endpoint for /oauth/start",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /oauth/start",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/oauth/callback",
      "method": "GET",
      "description": "GET endpoint for /oauth/callback",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /oauth/callback",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/oauth/refresh",
      "method": "POST",
      "description": "POST endpoint for /oauth/refresh",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /oauth/refresh",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/properties",
      "method": "GET",
      "description": "GET endpoint for /properties",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /properties",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/sync",
      "method": "POST",
      "description": "POST endpoint for /sync",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /sync",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/performance",
      "method": "GET",
      "description": "GET endpoint for /performance",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /performance",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/connections",
      "method": "GET",
      "description": "GET endpoint for /connections",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /connections",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/connections",
      "method": "POST",
      "description": "POST endpoint for /connections",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /connections",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/connections/:id",
      "method": "GET",
      "description": "GET endpoint for /connections/:id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /connections/:id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/connections/:id",
      "method": "DELETE",
      "description": "DELETE endpoint for /connections/:id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "DELETE /connections/:id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/oauth/start",
      "method": "GET",
      "description": "GET endpoint for /oauth/start",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /oauth/start",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/oauth/callback/:type",
      "method": "GET",
      "description": "GET endpoint for /oauth/callback/:type",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /oauth/callback/:type",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/test-connection",
      "method": "POST",
      "description": "POST endpoint for /test-connection",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /test-connection",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/login",
      "method": "POST",
      "description": "POST endpoint for /login",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /login",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/register",
      "method": "POST",
      "description": "POST endpoint for /register",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /register",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/refresh",
      "method": "POST",
      "description": "POST endpoint for /refresh",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /refresh",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/me",
      "method": "GET",
      "description": "GET endpoint for /me",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /me",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/",
      "method": "GET",
      "description": "GET endpoint for /",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/generate",
      "method": "POST",
      "description": "POST endpoint for /generate",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /generate",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/publish",
      "method": "POST",
      "description": "POST endpoint for /publish",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "POST /publish",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/:id",
      "method": "GET",
      "description": "GET endpoint for /:id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET /:id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/:id",
      "method": "PUT",
      "description": "PUT endpoint for /:id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "PUT /:id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "/:id",
      "method": "DELETE",
      "description": "DELETE endpoint for /:id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "DELETE /:id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "User-Agent",
      "method": "GET",
      "description": "GET endpoint for User-Agent",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET User-Agent",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "User-Agent",
      "method": "GET",
      "description": "GET endpoint for User-Agent",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET User-Agent",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "site_url",
      "method": "GET",
      "description": "GET endpoint for site_url",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET site_url",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "user_login",
      "method": "GET",
      "description": "GET endpoint for user_login",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET user_login",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "password",
      "method": "GET",
      "description": "GET endpoint for password",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET password",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "shop",
      "method": "GET",
      "description": "GET endpoint for shop",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET shop",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "websiteId",
      "method": "GET",
      "description": "GET endpoint for websiteId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET websiteId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "websiteUrl",
      "method": "GET",
      "description": "GET endpoint for websiteUrl",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET websiteUrl",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "status",
      "method": "GET",
      "description": "GET endpoint for status",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET status",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "limit",
      "method": "GET",
      "description": "GET endpoint for limit",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET limit",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "offset",
      "method": "GET",
      "description": "GET endpoint for offset",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET offset",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "stripe-signature",
      "method": "GET",
      "description": "GET endpoint for stripe-signature",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET stripe-signature",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "authorization",
      "method": "GET",
      "description": "GET endpoint for authorization",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET authorization",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "connectionId",
      "method": "GET",
      "description": "GET endpoint for connectionId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET connectionId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "siteId",
      "method": "GET",
      "description": "GET endpoint for siteId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET siteId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "threadId",
      "method": "GET",
      "description": "GET endpoint for threadId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET threadId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "authUserId",
      "method": "GET",
      "description": "GET endpoint for authUserId",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET authUserId",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "userToken",
      "method": "GET",
      "description": "GET endpoint for userToken",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET userToken",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "code",
      "method": "GET",
      "description": "GET endpoint for code",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET code",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "state",
      "method": "GET",
      "description": "GET endpoint for state",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET state",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "error",
      "method": "GET",
      "description": "GET endpoint for error",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET error",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "origin",
      "method": "GET",
      "description": "GET endpoint for origin",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET origin",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "code",
      "method": "GET",
      "description": "GET endpoint for code",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET code",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "state",
      "method": "GET",
      "description": "GET endpoint for state",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET state",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "error",
      "method": "GET",
      "description": "GET endpoint for error",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET error",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "user_id",
      "method": "GET",
      "description": "GET endpoint for user_id",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET user_id",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "site_url",
      "method": "GET",
      "description": "GET endpoint for site_url",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET site_url",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "user_login",
      "method": "GET",
      "description": "GET endpoint for user_login",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET user_login",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    },
    {
      "endpoint": "password",
      "method": "GET",
      "description": "GET endpoint for password",
      "parameters": [],
      "responses": [
        {
          "status": 200,
          "description": "Success",
          "schema": "JSON response"
        }
      ],
      "examples": [
        {
          "title": "Basic Usage",
          "request": "GET password",
          "response": "{ \"status\": \"success\" }"
        }
      ]
    }
  ],
  "deploymentGuide": "# Deployment Guide\n\nThis document provides a comprehensive guide for deploying the project on Vercel and a generic Node.js environment. It covers prerequisites, environment setup, build processes, deployment steps, post-deployment verification, and troubleshooting common issues.\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Environment Setup](#environment-setup)\n3. [Build Process](#build-process)\n4. [Deployment Steps](#deployment-steps)\n   - [Vercel Deployment](#vercel-deployment)\n   - [Generic Node.js Deployment](#generic-nodejs-deployment)\n5. [Post-Deployment](#post-deployment)\n6. [Troubleshooting](#troubleshooting)\n\n## Prerequisites\n\nBefore deploying the application, ensure you have the following tools and accounts:\n\n- **Node.js**: Version 14.x or later. You can download it from [Node.js Official Website](https://nodejs.org/).\n- **npm**: Comes bundled with Node.js. Verify installation with:\n  ```bash\n  npm -v\n  ```\n- **Git**: For version control. Download from [Git Official Website](https://git-scm.com/).\n- **Vercel Account**: Sign up at [Vercel](https://vercel.com/signup) if deploying on Vercel.\n- **Supabase Account**: Create an account at [Supabase](https://supabase.io/) for database management.\n\n## Environment Setup\n\nSet up the required environment variables in a `.env` file at the root of your project. Below is an example configuration:\n\n```dotenv\n# Supabase Configuration\nSUPABASE_URL=<your_supabase_url>\nSUPABASE_ANON_KEY=<your_supabase_anon_key>\n\n# Stripe Configuration\nSTRIPE_SECRET_KEY=<your_stripe_secret_key>\n\n# Google APIs Configuration\nGOOGLE_API_KEY=<your_google_api_key>\nGOOGLE_CLIENT_ID=<your_google_client_id>\nGOOGLE_CLIENT_SECRET=<your_google_client_secret>\n\n# Other Environment Variables\nNODE_ENV=production\n```\n\nMake sure to replace the placeholders with your actual credentials.\n\n## Build Process\n\nTo build the application, use the following command:\n\n```bash\nnpm run build\n```\n\nThis command compiles the application for production, optimizing the code and assets.\n\n## Deployment Steps\n\n### Vercel Deployment\n\n1. **Install Vercel CLI** (if not already installed):\n   ```bash\n   npm install -g vercel\n   ```\n\n2. **Login to Vercel**:\n   ```bash\n   vercel login\n   ```\n\n3. **Deploy the Application**:\n   Run the following command in the root directory of your project:\n   ```bash\n   vercel\n   ```\n\n4. **Follow the prompts** to configure your deployment. Vercel will automatically detect your project settings.\n\n5. **Set Environment Variables**:\n   After deployment, set the environment variables in the Vercel dashboard:\n   - Go to your project settings in Vercel.\n   - Navigate to the \"Environment Variables\" section.\n   - Add the necessary variables as defined in your `.env` file.\n\n### Generic Node.js Deployment\n\n1. **Clone the Repository**:\n   ```bash\n   git clone <repository-url>\n   cd <repository-directory>\n   ```\n\n2. **Install Dependencies**:\n   ```bash\n   npm install\n   ```\n\n3. **Set Up Environment Variables**:\n   Create a `.env` file in the root directory and configure it as described in the Environment Setup section.\n\n4. **Run Database Migrations**:\n   If applicable, run the database migration script:\n   ```bash\n   npm run run-migration\n   ```\n\n5. **Start the Application**:\n   Use the following command to start the application:\n   ```bash\n   npm start\n   ```\n\n6. **Configure Reverse Proxy** (if necessary):\n   If deploying behind a reverse proxy (e.g., Nginx), ensure to configure it to forward requests to the Node.js server.\n\n## Post-Deployment\n\nAfter deployment, verify that the application is running correctly:\n\n1. **Check Application Status**:\n   - For Vercel, visit the provided URL after deployment.\n   - For Node.js, navigate to `http://localhost:3000` or the configured port.\n\n2. **Monitor Logs**:\n   - For Vercel, check the logs in the Vercel dashboard.\n   - For Node.js, monitor logs in the terminal or set up a logging service.\n\n3. **Test Functionality**:\n   Ensure all features are working as expected, including database connections and third-party integrations.\n\n## Troubleshooting\n\n### Common Deployment Issues\n\n1. **Environment Variables Not Set**:\n   Ensure all environment variables are correctly set in the `.env` file or the deployment platform's environment settings.\n\n2. **Database Connection Errors**:\n   Verify that the Supabase URL and keys are correct. Check network configurations if applicable.\n\n3. **Build Failures**:\n   - Check the build logs for errors.\n   - Ensure all dependencies are correctly installed and compatible.\n\n4. **Application Not Starting**:\n   - Verify that the correct Node.js version is being used.\n   - Check for any syntax errors or missing modules.\n\n5. **API Errors**:\n   If you encounter API errors, review the API keys and permissions in your third-party services (e.g., Stripe, Google APIs).\n\nBy following this guide, you should be able to successfully deploy the application on both Vercel and a generic Node.js environment. For further assistance, refer to the documentation of the respective platforms or reach out to the development team.",
  "troubleshooting": "# Troubleshooting Guide\n\nThis troubleshooting guide is designed to help developers identify and resolve common issues encountered while working with a project built using React, Next.js, and Express, alongside various dependencies. Each section outlines symptoms, root causes, solutions, and prevention strategies for specific categories of issues.\n\n## Table of Contents\n1. [Common Setup Issues](#common-setup-issues)\n2. [Build Errors](#build-errors)\n3. [Runtime Errors](#runtime-errors)\n4. [Performance Issues](#performance-issues)\n5. [Database Connectivity](#database-connectivity)\n6. [API Integration](#api-integration)\n7. [Deployment Issues](#deployment-issues)\n\n---\n\n## 1. Common Setup Issues\n\n### Symptoms and Error Messages\n- Errors during `npm install` or `yarn install`.\n- Missing environment variables.\n- Incorrect package versions.\n\n### Root Cause Analysis\n- Incompatible package versions or missing dependencies.\n- Environment variables not set in `.env` file.\n- Node.js version mismatch.\n\n### Step-by-Step Solutions\n1. **Check Node.js Version**:\n   ```bash\n   node -v\n   ```\n   Ensure you are using the recommended version (check `package.json` for `engines`).\n\n2. **Install Dependencies**:\n   ```bash\n   npm install\n   ```\n   or\n   ```bash\n   yarn install\n   ```\n   Ensure there are no errors during installation.\n\n3. **Set Up Environment Variables**:\n   - Create a `.env` file in the root directory.\n   - Add required variables as specified in the project documentation.\n\n### Prevention Strategies\n- Regularly update dependencies and check compatibility.\n- Use a version manager like `nvm` to manage Node.js versions.\n- Document environment variable requirements clearly.\n\n---\n\n## 2. Build Errors\n\n### Symptoms and Error Messages\n- Errors during `npm run build` or `next build`.\n- Syntax errors in JavaScript/TypeScript files.\n- Module not found errors.\n\n### Root Cause Analysis\n- Incorrect import paths or missing files.\n- Syntax issues in code (e.g., missing semicolons, mismatched brackets).\n- Unsupported features in the current JavaScript version.\n\n### Step-by-Step Solutions\n1. **Check for Syntax Errors**:\n   - Use a linter like ESLint to identify issues:\n   ```bash\n   npx eslint .\n   ```\n\n2. **Verify Import Paths**:\n   - Ensure all import statements are correct and files exist.\n\n3. **Update Next.js Configuration**:\n   - Check `next.config.js` for any misconfigurations.\n\n### Prevention Strategies\n- Use TypeScript to catch type-related issues during development.\n- Set up continuous integration (CI) to catch build errors early.\n\n---\n\n## 3. Runtime Errors\n\n### Symptoms and Error Messages\n- Application crashes with error messages in the console.\n- Unhandled promise rejections.\n- \"Cannot read property of undefined\" errors.\n\n### Root Cause Analysis\n- Logic errors in the code.\n- Asynchronous code not handled properly.\n- State management issues in React components.\n\n### Step-by-Step Solutions\n1. **Check Console for Errors**:\n   - Look for stack traces in the browser console to identify the source of the error.\n\n2. **Use Error Boundaries**:\n   - Implement error boundaries in React to catch errors in components:\n   ```javascript\n   class ErrorBoundary extends React.Component {\n     constructor(props) {\n       super(props);\n       this.state = { hasError: false };\n     }\n\n     static getDerivedStateFromError(error) {\n       return { hasError: true };\n     }\n\n     componentDidCatch(error, errorInfo) {\n       console.error(\"Error caught in Error Boundary:\", error, errorInfo);\n     }\n\n     render() {\n       if (this.state.hasError) {\n         return <h1>Something went wrong.</h1>;\n       }\n       return this.props.children; \n     }\n   }\n   ```\n\n3. **Handle Promises Properly**:\n   - Ensure all promises are handled with `.catch()` or use `async/await` with try/catch.\n\n### Prevention Strategies\n- Write unit tests to cover critical functionality.\n- Use TypeScript to catch potential runtime errors during development.\n\n---\n\n## 4. Performance Issues\n\n### Symptoms and Error Messages\n- Slow loading times.\n- High memory usage in the browser.\n- Laggy UI interactions.\n\n### Root Cause Analysis\n- Large bundle sizes due to unoptimized assets.\n- Inefficient rendering in React components.\n- Excessive API calls or data fetching.\n\n### Step-by-Step Solutions\n1. **Analyze Bundle Size**:\n   - Use Webpack Bundle Analyzer:\n   ```bash\n   npm install --save-dev webpack-bundle-analyzer\n   ```\n   Add to your build script and analyze the output.\n\n2. **Optimize React Components**:\n   - Use `React.memo` and `useMemo` to prevent unnecessary re-renders.\n\n3. **Implement Lazy Loading**:\n   - Use dynamic imports for components that are not immediately needed:\n   ```javascript\n   const LazyComponent = dynamic(() => import('./LazyComponent'));\n   ```\n\n### Prevention Strategies\n- Regularly audit performance using tools like Lighthouse.\n- Optimize images and assets before adding them to the project.\n\n---\n\n## 5. Database Connectivity\n\n### Symptoms and Error Messages\n- Connection timeout errors.\n- Query execution failures.\n- Data not being saved or retrieved correctly.\n\n### Root Cause Analysis\n- Incorrect database connection string.\n- Network issues or database server downtime.\n- Misconfigured database permissions.\n\n### Step-by-Step Solutions\n1. **Verify Connection String**:\n   - Check the connection string in your `.env` file for accuracy.\n\n2. **Test Database Connection**:\n   - Use a database client to manually connect and test queries.\n\n3. **Check Database Logs**:\n   - Review logs for any errors or warnings related to connectivity.\n\n### Prevention Strategies\n- Use connection pooling to manage database connections efficiently.\n- Monitor database performance and set up alerts for downtime.\n\n---\n\n## 6. API Integration\n\n### Symptoms and Error Messages\n- API requests failing with 4xx or 5xx status codes.\n- Unexpected data format in API responses.\n- CORS errors in the browser.\n\n### Root Cause Analysis\n- Incorrect API endpoint or request parameters.\n- API rate limits being exceeded.\n- CORS policy not set up correctly on the server.\n\n### Step-by-Step Solutions\n1. **Check API Endpoints**:\n   - Verify that the API endpoints are correct and accessible.\n\n2. **Inspect Network Requests**:\n   - Use browser developer tools to inspect network requests and responses.\n\n3. **Handle CORS Issues**:\n   - Ensure the server is configured to allow requests from your frontend domain.\n\n### Prevention Strategies\n- Implement error handling for API requests to manage failures gracefully.\n- Document API usage and expected responses clearly.\n\n---\n\n## 7. Deployment Issues\n\n### Symptoms and Error Messages\n- Application not starting in production.\n- Environment variables not being recognized.\n- 404 errors for static assets.\n\n### Root Cause Analysis\n- Misconfigured deployment settings.\n- Missing or incorrect environment variables.\n- Build artifacts not being served correctly.\n\n### Step-by-Step Solutions\n1. **Check Deployment Logs**:\n   - Review logs from your hosting provider for errors during deployment.\n\n2. **Verify Environment Variables**:\n   - Ensure all required environment variables are set in the production environment.\n\n3. **Inspect Static File Serving**:\n   - Ensure that static files are being served correctly by your server configuration.\n\n### Prevention Strategies\n- Automate deployment processes using CI/CD pipelines.\n- Maintain a checklist for deployment to ensure all steps are followed.\n\n---\n\nThis troubleshooting guide provides a structured approach to resolving common issues in a React, Next.js, and Express project. By following the outlined steps and implementing prevention strategies, developers can enhance their workflow and minimize disruptions."
}